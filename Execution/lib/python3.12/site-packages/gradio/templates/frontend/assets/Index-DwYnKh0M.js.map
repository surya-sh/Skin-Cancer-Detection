{"version":3,"file":"Index-DwYnKh0M.js","sources":["../../../../js/dataframe/shared/selection_utils.ts","../../../../js/dataframe/shared/context/selection_context.ts","../../../../js/dataframe/shared/context/keyboard_context.ts","../../../../js/dataframe/shared/utils/sort_utils.ts","../../../../js/dataframe/shared/utils/table_utils.ts","../../../../js/dataframe/shared/context/table_context.ts","../../../../js/dataframe/shared/icons/SelectionButtons.svelte","../../../../js/dataframe/shared/EditableCell.svelte","../../../../js/dataframe/shared/RowNumber.svelte","../../../../js/dataframe/shared/CellMenuButton.svelte","../../../../js/dataframe/shared/icons/Padlock.svelte","../../../../js/dataframe/shared/icons/SortArrowUp.svelte","../../../../js/dataframe/shared/icons/SortArrowDown.svelte","../../../../js/dataframe/shared/TableHeader.svelte","../../../../js/dataframe/shared/TableCell.svelte","../../../../js/dataframe/shared/EmptyRowButton.svelte","../../../../js/dataframe/shared/VirtualTable.svelte","../../../../js/dataframe/shared/CellMenuIcons.svelte","../../../../js/dataframe/shared/CellMenu.svelte","../../../../js/dataframe/shared/Toolbar.svelte","../../../../js/dataframe/shared/utils/data_processing.ts","../../../../js/dataframe/shared/utils/keyboard_utils.ts","../../../../js/dataframe/shared/utils/drag_utils.ts","../../../../js/dataframe/shared/Table.svelte","../../../../js/dataframe/Index.svelte"],"sourcesContent":["import type { CellCoordinate, EditingState } from \"./types\";\n\nexport type CellData = { id: string; value: string | number };\n\nexport function is_cell_in_selection(\n\tcoords: [number, number],\n\tselected_cells: [number, number][]\n): boolean {\n\tconst [row, col] = coords;\n\treturn selected_cells.some(([r, c]) => r === row && c === col);\n}\n\nexport function is_cell_selected(\n\tcell: CellCoordinate,\n\tselected_cells: CellCoordinate[]\n): string {\n\tconst [row, col] = cell;\n\tif (!selected_cells.some(([r, c]) => r === row && c === col)) return \"\";\n\n\tconst up = selected_cells.some(([r, c]) => r === row - 1 && c === col);\n\tconst down = selected_cells.some(([r, c]) => r === row + 1 && c === col);\n\tconst left = selected_cells.some(([r, c]) => r === row && c === col - 1);\n\tconst right = selected_cells.some(([r, c]) => r === row && c === col + 1);\n\n\treturn `cell-selected${up ? \" no-top\" : \"\"}${down ? \" no-bottom\" : \"\"}${left ? \" no-left\" : \"\"}${right ? \" no-right\" : \"\"}`;\n}\n\nexport function get_range_selection(\n\tstart: CellCoordinate,\n\tend: CellCoordinate\n): CellCoordinate[] {\n\tconst [start_row, start_col] = start;\n\tconst [end_row, end_col] = end;\n\tconst min_row = Math.min(start_row, end_row);\n\tconst max_row = Math.max(start_row, end_row);\n\tconst min_col = Math.min(start_col, end_col);\n\tconst max_col = Math.max(start_col, end_col);\n\n\tconst cells: CellCoordinate[] = [];\n\t// Add the start cell as the \"anchor\" cell so that when\n\t// we press shift+arrow keys, the selection will always\n\t// include the anchor cell.\n\tcells.push(start);\n\n\tfor (let i = min_row; i <= max_row; i++) {\n\t\tfor (let j = min_col; j <= max_col; j++) {\n\t\t\tif (i === start_row && j === start_col) continue;\n\t\t\tcells.push([i, j]);\n\t\t}\n\t}\n\treturn cells;\n}\n\nexport function handle_selection(\n\tcurrent: CellCoordinate,\n\tselected_cells: CellCoordinate[],\n\tevent: { shiftKey: boolean; metaKey: boolean; ctrlKey: boolean }\n): CellCoordinate[] {\n\tif (event.shiftKey && selected_cells.length > 0) {\n\t\treturn get_range_selection(\n\t\t\tselected_cells[selected_cells.length - 1],\n\t\t\tcurrent\n\t\t);\n\t}\n\n\tif (event.metaKey || event.ctrlKey) {\n\t\tconst is_cell_match = ([r, c]: CellCoordinate): boolean =>\n\t\t\tr === current[0] && c === current[1];\n\t\tconst index = selected_cells.findIndex(is_cell_match);\n\t\treturn index === -1\n\t\t\t? [...selected_cells, current]\n\t\t\t: selected_cells.filter((_, i) => i !== index);\n\t}\n\n\treturn [current];\n}\n\nexport function handle_delete_key(\n\tdata: CellData[][],\n\tselected_cells: CellCoordinate[]\n): CellData[][] {\n\tconst new_data = data.map((row) => [...row]);\n\tselected_cells.forEach(([row, col]) => {\n\t\tif (new_data[row] && new_data[row][col]) {\n\t\t\tnew_data[row][col] = { ...new_data[row][col], value: \"\" };\n\t\t}\n\t});\n\treturn new_data;\n}\n\nexport function handle_editing_state(\n\tcurrent: CellCoordinate,\n\tediting: EditingState,\n\tselected_cells: CellCoordinate[],\n\teditable: boolean\n): EditingState {\n\tconst [row, col] = current;\n\tif (!editable) return false;\n\n\tif (editing && editing[0] === row && editing[1] === col) return editing;\n\n\tif (\n\t\tselected_cells.length === 1 &&\n\t\tselected_cells[0][0] === row &&\n\t\tselected_cells[0][1] === col\n\t) {\n\t\treturn [row, col];\n\t}\n\n\treturn false;\n}\n\nexport function should_show_cell_menu(\n\tcell: CellCoordinate,\n\tselected_cells: CellCoordinate[],\n\teditable: boolean\n): boolean {\n\tconst [row, col] = cell;\n\treturn (\n\t\teditable &&\n\t\tselected_cells.length === 1 &&\n\t\tselected_cells[0][0] === row &&\n\t\tselected_cells[0][1] === col\n\t);\n}\n\nexport function get_next_cell_coordinates(\n\tcurrent: CellCoordinate,\n\tdata: CellData[][],\n\tshift_key: boolean\n): CellCoordinate | false {\n\tconst [row, col] = current;\n\tconst direction = shift_key ? -1 : 1;\n\n\tif (data[row]?.[col + direction]) {\n\t\treturn [row, col + direction];\n\t}\n\n\tconst next_row = row + (direction > 0 ? 1 : 0);\n\tconst prev_row = row + (direction < 0 ? -1 : 0);\n\n\tif (direction > 0 && data[next_row]?.[0]) {\n\t\treturn [next_row, 0];\n\t}\n\n\tif (direction < 0 && data[prev_row]?.[data[0].length - 1]) {\n\t\treturn [prev_row, data[0].length - 1];\n\t}\n\n\treturn false;\n}\n\nexport function move_cursor(\n\tevent: KeyboardEvent,\n\tcurrent_coords: CellCoordinate,\n\tdata: CellData[][]\n): CellCoordinate | false {\n\tconst key = event.key as \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\";\n\tconst dir = {\n\t\tArrowRight: [0, 1],\n\t\tArrowLeft: [0, -1],\n\t\tArrowDown: [1, 0],\n\t\tArrowUp: [-1, 0]\n\t}[key];\n\n\tlet i, j;\n\tif (event.metaKey || event.ctrlKey) {\n\t\tif (key === \"ArrowRight\") {\n\t\t\ti = current_coords[0];\n\t\t\tj = data[0].length - 1;\n\t\t} else if (key === \"ArrowLeft\") {\n\t\t\ti = current_coords[0];\n\t\t\tj = 0;\n\t\t} else if (key === \"ArrowDown\") {\n\t\t\ti = data.length - 1;\n\t\t\tj = current_coords[1];\n\t\t} else if (key === \"ArrowUp\") {\n\t\t\ti = 0;\n\t\t\tj = current_coords[1];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\ti = current_coords[0] + dir[0];\n\t\tj = current_coords[1] + dir[1];\n\t}\n\n\tif (i < 0 && j <= 0) {\n\t\treturn false;\n\t}\n\n\tconst is_data = data[i]?.[j];\n\tif (is_data) {\n\t\treturn [i, j];\n\t}\n\treturn false;\n}\n\nexport function get_current_indices(\n\tid: string,\n\tdata: CellData[][]\n): [number, number] {\n\treturn data.reduce(\n\t\t(acc, arr, i) => {\n\t\t\tconst j = arr.reduce(\n\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t-1\n\t\t\t);\n\t\t\treturn j === -1 ? acc : [i, j];\n\t\t},\n\t\t[-1, -1]\n\t);\n}\n\nexport function handle_click_outside(\n\tevent: Event,\n\tparent: HTMLElement\n): boolean {\n\tconst [trigger] = event.composedPath() as HTMLElement[];\n\treturn !parent.contains(trigger);\n}\n\nexport function select_column(data: any[][], col: number): CellCoordinate[] {\n\treturn Array.from({ length: data.length }, (_, i) => [i, col]);\n}\n\nexport function select_row(data: any[][], row: number): CellCoordinate[] {\n\treturn Array.from({ length: data[0].length }, (_, i) => [row, i]);\n}\n\nexport function calculate_selection_positions(\n\tselected: CellCoordinate,\n\tdata: { id: string; value: string | number }[][],\n\tels: Record<string, { cell: HTMLTableCellElement | null }>,\n\tparent: HTMLElement,\n\ttable: HTMLElement\n): { col_pos: string; row_pos: string | undefined } {\n\tconst [row, col] = selected;\n\tif (!data[row]?.[col]) {\n\t\treturn { col_pos: \"0px\", row_pos: undefined };\n\t}\n\n\tconst cell_id = data[row][col].id;\n\tconst cell_el = els[cell_id]?.cell;\n\n\tif (!cell_el) {\n\t\treturn { col_pos: \"0px\", row_pos: undefined };\n\t}\n\n\tconst cell_rect = cell_el.getBoundingClientRect();\n\tconst table_rect = table.getBoundingClientRect();\n\tconst col_pos = `${cell_rect.left - table_rect.left + cell_rect.width / 2}px`;\n\tconst row_pos = `${cell_rect.top - table_rect.top + cell_rect.height / 2}px`;\n\n\treturn { col_pos, row_pos };\n}\n","import { getContext, setContext } from \"svelte\";\nimport { tick } from \"svelte\";\nimport type { DataFrameContext } from \"./table_context\";\nimport type { CellData } from \"../selection_utils\";\nimport type { DataframeValue } from \"../utils\";\nimport { handle_selection } from \"../selection_utils\";\n\nconst SELECTION_KEY = Symbol(\"selection\");\n\nexport type SelectionContext = {\n\tdf_actions: DataFrameContext[\"actions\"];\n\tdispatch: {\n\t\t(e: \"change\", detail: DataframeValue): void;\n\t\t(e: \"input\", detail?: undefined): void;\n\t\t(e: \"select\", detail: any): void;\n\t\t(e: \"search\", detail: string | null): void;\n\t};\n\tdata: CellData[][];\n\tels: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t>;\n\teditable: boolean;\n\tshow_row_numbers: boolean;\n\tget_data_at: (row: number, col: number) => string | number;\n\tclear_on_focus: boolean;\n\tselected_cells: [number, number][];\n\tparent_element: HTMLElement;\n\tactions: {\n\t\thandle_cell_click: (event: MouseEvent, row: number, col: number) => void;\n\t\ttoggle_cell_menu: (event: MouseEvent, row: number, col: number) => void;\n\t\ttoggle_cell_button: (row: number, col: number) => void;\n\t\thandle_select_column: (col: number) => void;\n\t\thandle_select_row: (row: number) => void;\n\t};\n};\n\nexport function create_selection_context(\n\tcontext: Omit<SelectionContext, \"actions\">\n): SelectionContext {\n\tconst instance_id = Symbol(\n\t\t`selection_${Math.random().toString(36).substring(2)}`\n\t);\n\tconst actions = {\n\t\thandle_cell_click: (event: MouseEvent, row: number, col: number) => {\n\t\t\tif (event.target instanceof HTMLAnchorElement) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tif (context.show_row_numbers && col === -1) return;\n\n\t\t\tcontext.clear_on_focus = false;\n\t\t\tcontext.df_actions.set_active_cell_menu(null);\n\t\t\tcontext.df_actions.set_active_header_menu(null);\n\t\t\tcontext.df_actions.set_selected_header(false);\n\t\t\tcontext.df_actions.set_header_edit(false);\n\n\t\t\tconst new_selected_cells = handle_selection(\n\t\t\t\t[row, col],\n\t\t\t\tcontext.selected_cells || [],\n\t\t\t\tevent\n\t\t\t);\n\n\t\t\tcontext.df_actions.set_selected_cells(new_selected_cells);\n\t\t\tcontext.df_actions.set_selected(new_selected_cells[0]);\n\n\t\t\tif (context.editable) {\n\t\t\t\tif (new_selected_cells.length === 1) {\n\t\t\t\t\tcontext.df_actions.set_editing([row, col]);\n\t\t\t\t\ttick().then(() => {\n\t\t\t\t\t\tconst input_el = context.els[context.data[row][col].id].input;\n\t\t\t\t\t\tif (input_el) {\n\t\t\t\t\t\t\tinput_el.focus();\n\t\t\t\t\t\t\tinput_el.selectionStart = input_el.selectionEnd =\n\t\t\t\t\t\t\t\tinput_el.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcontext.df_actions.set_editing(false);\n\t\t\t\t\tcontext.parent_element.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontext.parent_element.focus();\n\t\t\t}\n\n\t\t\tactions.toggle_cell_button(row, col);\n\n\t\t\tcontext.dispatch(\"select\", {\n\t\t\t\tindex: [row, col],\n\t\t\t\tvalue: context.get_data_at(row, col),\n\t\t\t\trow_value: context.data[row].map((d) => d.value)\n\t\t\t});\n\t\t},\n\n\t\ttoggle_cell_menu: (event: MouseEvent, row: number, col: number) => {\n\t\t\tevent.stopPropagation();\n\t\t\tconst current_menu = context.df_actions.get_active_cell_menu();\n\t\t\tif (\n\t\t\t\tcurrent_menu &&\n\t\t\t\tcurrent_menu.row === row &&\n\t\t\t\tcurrent_menu.col === col\n\t\t\t) {\n\t\t\t\tcontext.df_actions.set_active_cell_menu(null);\n\t\t\t} else {\n\t\t\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\t\t\tif (cell) {\n\t\t\t\t\tconst rect = cell.getBoundingClientRect();\n\t\t\t\t\tcontext.df_actions.set_active_cell_menu({\n\t\t\t\t\t\trow,\n\t\t\t\t\t\tcol,\n\t\t\t\t\t\tx: rect.right,\n\t\t\t\t\t\ty: rect.bottom\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttoggle_cell_button: (row: number, col: number) => {\n\t\t\tconst current_button = context.df_actions.get_active_button();\n\t\t\tconst new_button =\n\t\t\t\tcurrent_button?.type === \"cell\" &&\n\t\t\t\tcurrent_button.row === row &&\n\t\t\t\tcurrent_button.col === col\n\t\t\t\t\t? null\n\t\t\t\t\t: { type: \"cell\" as const, row, col };\n\t\t\tcontext.df_actions.set_active_button(new_button);\n\t\t},\n\n\t\thandle_select_column: (col: number) => {\n\t\t\tconst selected_cells = context.data.map(\n\t\t\t\t(_, row) => [row, col] as [number, number]\n\t\t\t);\n\t\t\tcontext.df_actions.set_selected_cells(selected_cells);\n\t\t\tcontext.df_actions.set_selected(selected_cells[0]);\n\t\t\tcontext.df_actions.set_editing(false);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tcontext.parent_element.focus();\n\t\t\t}, 0);\n\t\t},\n\n\t\thandle_select_row: (row: number) => {\n\t\t\tconst selected_cells = context.data[0].map(\n\t\t\t\t(_, col) => [row, col] as [number, number]\n\t\t\t);\n\t\t\tcontext.df_actions.set_selected_cells(selected_cells);\n\t\t\tcontext.df_actions.set_selected(selected_cells[0]);\n\t\t\tcontext.df_actions.set_editing(false);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tcontext.parent_element.focus();\n\t\t\t}, 0);\n\t\t}\n\t};\n\n\tconst selection_context = { ...context, actions };\n\tsetContext(instance_id, selection_context);\n\tsetContext(SELECTION_KEY, { instance_id, context: selection_context });\n\treturn selection_context;\n}\n\nexport function get_selection_context(): SelectionContext {\n\tconst ctx = getContext<{ instance_id: symbol; context: SelectionContext }>(\n\t\tSELECTION_KEY\n\t);\n\treturn ctx ? ctx.context : getContext<SelectionContext>(SELECTION_KEY);\n}\n","import { getContext, setContext } from \"svelte\";\nimport type { DataFrameContext } from \"./table_context\";\nimport type { CellData } from \"../selection_utils\";\nimport type { DataframeValue } from \"../utils\";\nimport type { CellCoordinate } from \"../types\";\n\nconst KEYBOARD_KEY = Symbol(\"keyboard\");\n\nexport type KeyboardContext = {\n\tselected_header: number | false;\n\theader_edit: number | false;\n\tediting: [number, number] | false;\n\tselected: [number, number] | false;\n\tselected_cells: [number, number][];\n\teditable: boolean;\n\tdata: CellData[][];\n\theaders: { id: string; value: string }[];\n\tels: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t>;\n\tdf_actions: DataFrameContext[\"actions\"];\n\tdispatch: {\n\t\t(e: \"change\", detail: DataframeValue): void;\n\t\t(e: \"input\", detail?: undefined): void;\n\t\t(e: \"select\", detail: any): void;\n\t\t(e: \"search\", detail: string | null): void;\n\t};\n\tadd_row: (index?: number) => Promise<void>;\n\tget_next_cell_coordinates: (\n\t\tcurrent: CellCoordinate,\n\t\tdata: CellData[][],\n\t\tshift_key: boolean\n\t) => false | CellCoordinate;\n\tget_range_selection: (\n\t\tstart: CellCoordinate,\n\t\tend: CellCoordinate\n\t) => CellCoordinate[];\n\tmove_cursor: (\n\t\tevent: KeyboardEvent,\n\t\tcurrent_coords: CellCoordinate,\n\t\tdata: CellData[][]\n\t) => false | CellCoordinate;\n\tcopy_flash: boolean;\n\tset_copy_flash: (value: boolean) => void;\n\tparent_element?: HTMLDivElement;\n};\n\nexport function create_keyboard_context(\n\tcontext: KeyboardContext\n): KeyboardContext {\n\tconst instance_id = Symbol(\n\t\t`keyboard_${Math.random().toString(36).substring(2)}`\n\t);\n\tsetContext(instance_id, context);\n\tsetContext(KEYBOARD_KEY, { instance_id, context });\n\treturn context;\n}\n\nexport function get_keyboard_context(): KeyboardContext | undefined {\n\tconst ctx = getContext<{ instance_id: symbol; context: KeyboardContext }>(\n\t\tKEYBOARD_KEY\n\t);\n\treturn ctx ? ctx.context : getContext<KeyboardContext>(KEYBOARD_KEY);\n}\n","import type { Headers } from \"../types\";\nimport { sort_table_data } from \"./table_utils\";\n\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport function get_sort_status(\n\tname: string,\n\tsort_columns: { col: number; direction: SortDirection }[],\n\theaders: Headers\n): \"none\" | \"asc\" | \"desc\" {\n\tif (!sort_columns.length) return \"none\";\n\n\tconst sort_item = sort_columns.find((item) => {\n\t\tconst col = item.col;\n\t\tif (col < 0 || col >= headers.length) return false;\n\t\treturn headers[col] === name;\n\t});\n\n\tif (!sort_item) return \"none\";\n\treturn sort_item.direction;\n}\n\nexport function sort_data(\n\tdata: { id: string; value: string | number }[][],\n\tsort_columns: { col: number; direction: SortDirection }[]\n): number[] {\n\tif (!data || !data.length || !data[0]) {\n\t\treturn [];\n\t}\n\n\tif (sort_columns.length > 0) {\n\t\tconst row_indices = [...Array(data.length)].map((_, i) => i);\n\t\trow_indices.sort((row_a_idx, row_b_idx) => {\n\t\t\tconst row_a = data[row_a_idx];\n\t\t\tconst row_b = data[row_b_idx];\n\n\t\t\tfor (const { col: sort_by, direction } of sort_columns) {\n\t\t\t\tif (\n\t\t\t\t\t!row_a ||\n\t\t\t\t\t!row_b ||\n\t\t\t\t\tsort_by < 0 ||\n\t\t\t\t\tsort_by >= row_a.length ||\n\t\t\t\t\tsort_by >= row_b.length ||\n\t\t\t\t\t!row_a[sort_by] ||\n\t\t\t\t\t!row_b[sort_by]\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst val_a = row_a[sort_by].value;\n\t\t\t\tconst val_b = row_b[sort_by].value;\n\t\t\t\tconst comparison = val_a < val_b ? -1 : val_a > val_b ? 1 : 0;\n\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn direction === \"asc\" ? comparison : -comparison;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\t\treturn row_indices;\n\t}\n\treturn [...Array(data.length)].map((_, i) => i);\n}\n\nexport function sort_data_and_preserve_selection(\n\tdata: { id: string; value: string | number }[][],\n\tdisplay_value: string[][] | null,\n\tstyling: string[][] | null,\n\tsort_columns: { col: number; direction: SortDirection }[],\n\tselected: [number, number] | false,\n\tget_current_indices: (\n\t\tid: string,\n\t\tdata: { id: string; value: string | number }[][]\n\t) => [number, number]\n): { data: typeof data; selected: [number, number] | false } {\n\tlet id = null;\n\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\tid = data[selected[0]][selected[1]].id;\n\t}\n\n\tsort_table_data(data, display_value, styling, sort_columns);\n\n\tlet new_selected = selected;\n\tif (id) {\n\t\tconst [i, j] = get_current_indices(id, data);\n\t\tnew_selected = [i, j];\n\t}\n\n\treturn { data, selected: new_selected };\n}\n","import type { Headers, HeadersWithIDs, TableCell, TableData } from \"../types\";\nimport { sort_data } from \"./sort_utils\";\nimport type { SortDirection } from \"./sort_utils\";\nimport { dsvFormat } from \"d3-dsv\";\n\nexport function make_cell_id(row: number, col: number): string {\n\treturn `cell-${row}-${col}`;\n}\n\nexport function make_header_id(col: number): string {\n\treturn `header-${col}`;\n}\n\nexport function get_max(data: TableData): TableCell[] {\n\tif (!data || !data.length) return [];\n\tlet max = data[0].slice();\n\tfor (let i = 0; i < data.length; i++) {\n\t\tfor (let j = 0; j < data[i].length; j++) {\n\t\t\tif (`${max[j].value}`.length < `${data[i][j].value}`.length) {\n\t\t\t\tmax[j] = data[i][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nexport function sort_table_data(\n\tdata: TableData,\n\tdisplay_value: string[][] | null,\n\tstyling: string[][] | null,\n\tsort_columns: { col: number; direction: SortDirection }[]\n): void {\n\tif (!sort_columns.length) return;\n\tif (!data || !data.length) return;\n\n\tconst indices = sort_data(data, sort_columns);\n\n\tconst new_data = indices.map((i: number) => data[i]);\n\tdata.splice(0, data.length, ...new_data);\n\n\tif (display_value) {\n\t\tconst new_display = indices.map((i: number) => display_value[i]);\n\t\tdisplay_value.splice(0, display_value.length, ...new_display);\n\t}\n\n\tif (styling) {\n\t\tconst new_styling = indices.map((i: number) => styling[i]);\n\t\tstyling.splice(0, styling.length, ...new_styling);\n\t}\n}\n\nexport async function copy_table_data(\n\tdata: TableData,\n\tselected_cells: [number, number][] | null\n): Promise<void> {\n\tif (!data || !data.length) return;\n\n\tconst cells_to_copy =\n\t\tselected_cells ||\n\t\tdata.flatMap((row, r) => row.map((_, c) => [r, c] as [number, number]));\n\n\tconst csv = cells_to_copy.reduce(\n\t\t(acc: { [key: string]: { [key: string]: string } }, [row, col]) => {\n\t\t\tacc[row] = acc[row] || {};\n\t\t\tconst value = String(data[row][col].value);\n\t\t\tacc[row][col] =\n\t\t\t\tvalue.includes(\",\") || value.includes('\"') || value.includes(\"\\n\")\n\t\t\t\t\t? `\"${value.replace(/\"/g, '\"\"')}\"`\n\t\t\t\t\t: value;\n\t\t\treturn acc;\n\t\t},\n\t\t{}\n\t);\n\n\tconst rows = Object.keys(csv).sort((a, b) => +a - +b);\n\tif (!rows.length) return;\n\n\tconst cols = Object.keys(csv[rows[0]]).sort((a, b) => +a - +b);\n\tconst text = rows\n\t\t.map((r) => cols.map((c) => csv[r][c] || \"\").join(\",\"))\n\t\t.join(\"\\n\");\n\n\ttry {\n\t\tawait navigator.clipboard.writeText(text);\n\t} catch (err) {\n\t\tthrow new Error(\"Failed to copy to clipboard: \" + (err as Error).message);\n\t}\n}\n\n// File Import/Export\nexport function guess_delimiter(\n\ttext: string,\n\tpossibleDelimiters: string[]\n): string[] {\n\treturn possibleDelimiters.filter(weedOut);\n\n\tfunction weedOut(delimiter: string): boolean {\n\t\tvar cache = -1;\n\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\tfunction checkLength(line: string): boolean {\n\t\t\tif (!line) return true;\n\t\t\tvar length = line.split(delimiter).length;\n\t\t\tif (cache < 0) cache = length;\n\t\t\treturn cache === length && length > 1;\n\t\t}\n\t}\n}\n\nexport function data_uri_to_blob(data_uri: string): Blob {\n\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\tconst ab = new ArrayBuffer(byte_str.length);\n\tconst ia = new Uint8Array(ab);\n\tfor (let i = 0; i < byte_str.length; i++) {\n\t\tia[i] = byte_str.charCodeAt(i);\n\t}\n\treturn new Blob([ab], { type: mime_str });\n}\n\nexport function handle_file_upload(\n\tdata_uri: string,\n\tupdate_headers: (headers: Headers) => HeadersWithIDs[],\n\tupdate_values: (values: (string | number)[][]) => void\n): void {\n\tconst blob = data_uri_to_blob(data_uri);\n\tconst reader = new FileReader();\n\treader.addEventListener(\"loadend\", (e) => {\n\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\t\tconst [delimiter] = guess_delimiter(e.target.result, [\",\", \"\\t\"]);\n\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\t\tupdate_headers(head);\n\t\tupdate_values(rest);\n\t});\n\treader.readAsText(blob);\n}\n","import { getContext, setContext } from \"svelte\";\nimport { writable, get } from \"svelte/store\";\nimport type { Writable } from \"svelte/store\";\nimport { sort_table_data } from \"../utils/table_utils\";\nimport { dequal } from \"dequal/lite\";\nimport type { DataframeValue } from \"../utils\";\n\nexport const DATAFRAME_KEY = Symbol(\"dataframe\");\n\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport type DataFrameState = {\n\tconfig: {\n\t\tshow_fullscreen_button: boolean;\n\t\tshow_copy_button: boolean;\n\t\tshow_search: \"none\" | \"search\" | \"filter\";\n\t\tshow_row_numbers: boolean;\n\t\teditable: boolean;\n\t\tpinned_columns: number;\n\t\tshow_label: boolean;\n\t\tline_breaks: boolean;\n\t\twrap: boolean;\n\t\tmax_height: number;\n\t\tcolumn_widths: string[];\n\t\tmax_chars: number | undefined;\n\t};\n\tcurrent_search_query: string | null;\n\tsort_state: {\n\t\tsort_columns: { col: number; direction: SortDirection }[];\n\t\trow_order: number[];\n\t};\n\tui_state: {\n\t\tactive_cell_menu: { row: number; col: number; x: number; y: number } | null;\n\t\tactive_header_menu: { col: number; x: number; y: number } | null;\n\t\tselected_cells: [number, number][];\n\t\tselected: [number, number] | false;\n\t\tediting: [number, number] | false;\n\t\theader_edit: number | false;\n\t\tselected_header: number | false;\n\t\tactive_button: {\n\t\t\ttype: \"header\" | \"cell\";\n\t\t\trow?: number;\n\t\t\tcol: number;\n\t\t} | null;\n\t};\n};\n\nexport interface DataFrameContext {\n\tstate: Writable<DataFrameState>;\n\tactions: {\n\t\thandle_search: (search_query: string | null) => void;\n\t\thandle_sort: (col: number, direction: SortDirection) => void;\n\t\tget_sort_status: (\n\t\t\tname: string,\n\t\t\theaders: string[]\n\t\t) => \"none\" | \"asc\" | \"desc\";\n\t\tsort_data: (\n\t\t\tdata: any[][],\n\t\t\tdisplay_value: string[][] | null,\n\t\t\tstyling: string[][] | null\n\t\t) => void;\n\t\tupdate_row_order: (data: any[][]) => void;\n\t\tfilter_data: (data: any[][]) => any[][];\n\t\tadd_row: (data: any[][], make_id: () => string, index?: number) => any[][];\n\t\tadd_col: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tmake_id: () => string,\n\t\t\tindex?: number\n\t\t) => { data: any[][]; headers: string[] };\n\t\tadd_row_at: (\n\t\t\tdata: any[][],\n\t\t\tindex: number,\n\t\t\tposition: \"above\" | \"below\",\n\t\t\tmake_id: () => string\n\t\t) => any[][];\n\t\tadd_col_at: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tindex: number,\n\t\t\tposition: \"left\" | \"right\",\n\t\t\tmake_id: () => string\n\t\t) => { data: any[][]; headers: string[] };\n\t\tdelete_row: (data: any[][], index: number) => any[][];\n\t\tdelete_col: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tindex: number\n\t\t) => { data: any[][]; headers: string[] };\n\t\tdelete_row_at: (data: any[][], index: number) => any[][];\n\t\tdelete_col_at: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tindex: number\n\t\t) => { data: any[][]; headers: string[] };\n\t\tset_active_cell_menu: (\n\t\t\tmenu: { row: number; col: number; x: number; y: number } | null\n\t\t) => void;\n\t\tset_active_header_menu: (\n\t\t\tmenu: { col: number; x: number; y: number } | null\n\t\t) => void;\n\t\tset_selected_cells: (cells: [number, number][]) => void;\n\t\tset_selected: (selected: [number, number] | false) => void;\n\t\tset_editing: (editing: [number, number] | false) => void;\n\t\tclear_ui_state: () => void;\n\t\tset_header_edit: (header_index: number | false) => void;\n\t\tset_selected_header: (header_index: number | false) => void;\n\t\thandle_header_click: (col: number, editable: boolean) => void;\n\t\tend_header_edit: (key: string) => void;\n\t\ttrigger_change: (\n\t\t\tdata: any[][],\n\t\t\theaders: any[],\n\t\t\tprevious_data: string[][],\n\t\t\tprevious_headers: string[],\n\t\t\tvalue_is_output: boolean,\n\t\t\tdispatch: {\n\t\t\t\t(e: \"change\", detail: DataframeValue): void;\n\t\t\t\t(e: \"input\", detail?: undefined): void;\n\t\t\t\t(e: \"select\", detail: any): void;\n\t\t\t\t(e: \"search\", detail: string | null): void;\n\t\t\t}\n\t\t) => Promise<void>;\n\t\tget_selected_cells: () => [number, number][];\n\t\tget_active_cell_menu: () => {\n\t\t\trow: number;\n\t\t\tcol: number;\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t} | null;\n\t\tget_active_button: () => {\n\t\t\ttype: \"header\" | \"cell\";\n\t\t\trow?: number;\n\t\t\tcol: number;\n\t\t} | null;\n\t\tset_active_button: (\n\t\t\tbutton: { type: \"header\" | \"cell\"; row?: number; col: number } | null\n\t\t) => void;\n\t\treset_sort_state: () => void;\n\t};\n}\n\nexport function create_actions(\n\tstate: Writable<DataFrameState>\n): DataFrameContext[\"actions\"] {\n\tconst add_row = (\n\t\tdata: any[][],\n\t\tmake_id: () => string,\n\t\tindex?: number\n\t): any[][] => {\n\t\tif (!data || data.length === 0) {\n\t\t\treturn [[{ value: \"\", id: make_id() }]];\n\t\t}\n\n\t\tconst new_row = Array(data[0].length)\n\t\t\t.fill(null)\n\t\t\t.map(() => ({\n\t\t\t\tvalue: \"\",\n\t\t\t\tid: make_id()\n\t\t\t}));\n\n\t\tconst new_data = [...data];\n\t\tif (typeof index === \"number\" && index >= 0 && index <= data.length) {\n\t\t\tnew_data.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tnew_data.push(new_row);\n\t\t}\n\n\t\treturn new_data;\n\t};\n\n\tconst add_col = (\n\t\tdata: any[][],\n\t\theaders: string[],\n\t\tmake_id: () => string,\n\t\tindex?: number\n\t): { data: any[][]; headers: string[] } => {\n\t\tif (!data || data.length === 0) {\n\t\t\treturn {\n\t\t\t\tdata: [[{ value: \"\", id: make_id() }]],\n\t\t\t\theaders: [\"Header 1\"]\n\t\t\t};\n\t\t}\n\n\t\tconst new_headers = [...headers];\n\t\tconst new_data = data.map((row) => [...row]);\n\n\t\tif (\n\t\t\ttypeof index === \"number\" &&\n\t\t\tindex >= 0 &&\n\t\t\tindex <= (data[0]?.length || 0)\n\t\t) {\n\t\t\tnew_headers.splice(index, 0, `Header ${headers.length + 1}`);\n\t\t\tnew_data.forEach((row) => {\n\t\t\t\tconst id = make_id();\n\t\t\t\trow.splice(index, 0, { value: \"\", id });\n\t\t\t});\n\t\t} else {\n\t\t\tnew_headers.push(`Header ${headers.length + 1}`);\n\t\t\tnew_data.forEach((row) => {\n\t\t\t\tconst id = make_id();\n\t\t\t\trow.push({ value: \"\", id });\n\t\t\t});\n\t\t}\n\n\t\treturn { data: new_data, headers: new_headers };\n\t};\n\n\tconst reset_sort_state = (): void => {\n\t\tstate.update((s) => ({\n\t\t\t...s,\n\t\t\tsort_state: {\n\t\t\t\tsort_columns: [],\n\t\t\t\trow_order: []\n\t\t\t}\n\t\t}));\n\t};\n\n\treturn {\n\t\thandle_search: (search_query: string | null) => {\n\t\t\tstate.update((s) => ({ ...s, current_search_query: search_query }));\n\t\t},\n\t\thandle_sort: (col: number, direction: SortDirection) => {\n\t\t\tstate.update((s) => {\n\t\t\t\tconst sort_columns = [...s.sort_state.sort_columns];\n\t\t\t\tconst existing_index = sort_columns.findIndex(\n\t\t\t\t\t(item) => item.col === col\n\t\t\t\t);\n\n\t\t\t\tif (existing_index !== -1) {\n\t\t\t\t\tconst existing_item = sort_columns[existing_index];\n\n\t\t\t\t\tif (existing_item.direction === direction) {\n\t\t\t\t\t\tsort_columns.splice(existing_index, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsort_columns[existing_index] = { col, direction };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (sort_columns.length >= 3) {\n\t\t\t\t\t\tsort_columns.shift();\n\t\t\t\t\t}\n\t\t\t\t\tsort_columns.push({ col, direction });\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...s,\n\t\t\t\t\tsort_state: {\n\t\t\t\t\t\t...s.sort_state,\n\t\t\t\t\t\tsort_columns\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tget_sort_status: (\n\t\t\tname: string,\n\t\t\theaders: string[]\n\t\t): \"none\" | \"asc\" | \"desc\" => {\n\t\t\tconst current_state = get(state);\n\t\t\tconst sort_item = current_state.sort_state.sort_columns.find(\n\t\t\t\t(item) => headers[item.col] === name\n\t\t\t);\n\n\t\t\tif (!sort_item) return \"none\";\n\t\t\treturn sort_item.direction;\n\t\t},\n\t\tsort_data: (\n\t\t\tdata: any[][],\n\t\t\tdisplay_value: string[][] | null,\n\t\t\tstyling: string[][] | null\n\t\t) => {\n\t\t\tconst current_state = get(state);\n\t\t\tif (current_state.sort_state.sort_columns.length > 0) {\n\t\t\t\tsort_table_data(\n\t\t\t\t\tdata,\n\t\t\t\t\tdisplay_value,\n\t\t\t\t\tstyling,\n\t\t\t\t\tcurrent_state.sort_state.sort_columns\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tupdate_row_order: (data: any[][]) => {\n\t\t\tstate.update((s) => {\n\t\t\t\tconst current_sort_state = { ...s.sort_state };\n\t\t\t\tif (current_sort_state.sort_columns.length > 0 && data[0]) {\n\t\t\t\t\tconst indices = [...Array(data.length)].map((_, i) => i);\n\t\t\t\t\tindices.sort((a, b) => {\n\t\t\t\t\t\tconst row_a = data[a];\n\t\t\t\t\t\tconst row_b = data[b];\n\n\t\t\t\t\t\tfor (const {\n\t\t\t\t\t\t\tcol: sort_index,\n\t\t\t\t\t\t\tdirection\n\t\t\t\t\t\t} of current_sort_state.sort_columns) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!row_a ||\n\t\t\t\t\t\t\t\t!row_b ||\n\t\t\t\t\t\t\t\tsort_index < 0 ||\n\t\t\t\t\t\t\t\tsort_index >= row_a.length ||\n\t\t\t\t\t\t\t\tsort_index >= row_b.length\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst val_a = row_a[sort_index].value;\n\t\t\t\t\t\t\tconst val_b = row_b[sort_index].value;\n\t\t\t\t\t\t\tconst comp = val_a < val_b ? -1 : val_a > val_b ? 1 : 0;\n\n\t\t\t\t\t\t\tif (comp !== 0) {\n\t\t\t\t\t\t\t\treturn direction === \"asc\" ? comp : -comp;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\t\t\t\t\tcurrent_sort_state.row_order = indices;\n\t\t\t\t} else {\n\t\t\t\t\tcurrent_sort_state.row_order = [...Array(data.length)].map(\n\t\t\t\t\t\t(_, i) => i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn { ...s, sort_state: current_sort_state };\n\t\t\t});\n\t\t},\n\t\tfilter_data: (data: any[][]) => {\n\t\t\tconst current_state = get(state);\n\n\t\t\tif (!current_state.current_search_query) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tconst search_query = current_state.current_search_query.toLowerCase();\n\n\t\t\tconst filtered = data.filter((row) => {\n\t\t\t\treturn row.some((cell) => {\n\t\t\t\t\tif (!cell) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cell_value = cell.value;\n\n\t\t\t\t\tif (cell_value === null || cell_value === undefined) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst string_value = String(cell_value).toLowerCase();\n\t\t\t\t\treturn string_value.includes(search_query);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tadd_row,\n\t\tadd_col,\n\t\tadd_row_at: (\n\t\t\tdata: any[][],\n\t\t\tindex: number,\n\t\t\tposition: \"above\" | \"below\",\n\t\t\tmake_id: () => string\n\t\t) => {\n\t\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\t\treturn add_row(data, make_id, row_index);\n\t\t},\n\t\tadd_col_at: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tindex: number,\n\t\t\tposition: \"left\" | \"right\",\n\t\t\tmake_id: () => string\n\t\t) => {\n\t\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\t\treturn add_col(data, headers, make_id, col_index);\n\t\t},\n\t\tdelete_row: (data: any[][], index: number) => {\n\t\t\tif (data.length <= 1) {\n\t\t\t\treturn data;\n\t\t\t}\n\n\t\t\tconst new_data = [...data];\n\t\t\tnew_data.splice(index, 1);\n\n\t\t\treturn new_data;\n\t\t},\n\t\tdelete_col: (\n\t\t\tdata: any[][],\n\t\t\theaders: string[],\n\t\t\tindex: number\n\t\t): { data: any[][]; headers: string[] } => {\n\t\t\tif (headers.length <= 1) {\n\t\t\t\treturn { data, headers };\n\t\t\t}\n\n\t\t\tconst new_headers = [...headers];\n\t\t\tnew_headers.splice(index, 1);\n\n\t\t\tconst new_data = data.map((row) => {\n\t\t\t\tconst new_row = [...row];\n\t\t\t\tnew_row.splice(index, 1);\n\t\t\t\treturn new_row;\n\t\t\t});\n\n\t\t\treturn { data: new_data, headers: new_headers };\n\t\t},\n\t\tdelete_row_at: (data: any[][], index: number) => {\n\t\t\tif (data.length <= 1) return data;\n\t\t\tdata.splice(index, 1);\n\t\t\treturn data;\n\t\t},\n\t\tdelete_col_at: (data: any[][], headers: string[], index: number) => {\n\t\t\tif (headers.length <= 1) {\n\t\t\t\treturn { data, headers };\n\t\t\t}\n\n\t\t\tconst new_headers = [...headers];\n\t\t\tnew_headers.splice(index, 1);\n\n\t\t\tconst new_data = data.map((row) => {\n\t\t\t\tconst new_row = [...row];\n\t\t\t\tnew_row.splice(index, 1);\n\t\t\t\treturn new_row;\n\t\t\t});\n\n\t\t\treturn { data: new_data, headers: new_headers };\n\t\t},\n\t\tset_active_cell_menu: (menu) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, active_cell_menu: menu }\n\t\t\t}));\n\t\t},\n\t\tset_active_header_menu: (menu) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, active_header_menu: menu }\n\t\t\t}));\n\t\t},\n\t\tset_selected_cells: (cells) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, selected_cells: cells }\n\t\t\t}));\n\t\t},\n\t\tset_selected: (selected) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, selected: selected }\n\t\t\t}));\n\t\t},\n\t\tset_editing: (editing) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, editing: editing }\n\t\t\t}));\n\t\t},\n\t\tclear_ui_state: () => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: {\n\t\t\t\t\tactive_cell_menu: null,\n\t\t\t\t\tactive_header_menu: null,\n\t\t\t\t\tselected_cells: [],\n\t\t\t\t\tselected: false,\n\t\t\t\t\tediting: false,\n\t\t\t\t\theader_edit: false,\n\t\t\t\t\tselected_header: false,\n\t\t\t\t\tactive_button: null\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t\tset_header_edit: (header_index: number | false) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: {\n\t\t\t\t\t...s.ui_state,\n\t\t\t\t\tselected_cells: [],\n\t\t\t\t\tselected_header: header_index,\n\t\t\t\t\theader_edit: header_index\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t\tset_selected_header: (header_index: number | false) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: {\n\t\t\t\t\t...s.ui_state,\n\t\t\t\t\tselected_header: header_index,\n\t\t\t\t\tselected: false,\n\t\t\t\t\tselected_cells: []\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t\thandle_header_click: (col: number, editable: boolean) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: {\n\t\t\t\t\t...s.ui_state,\n\t\t\t\t\tactive_cell_menu: null,\n\t\t\t\t\tactive_header_menu: null,\n\t\t\t\t\tselected: false,\n\t\t\t\t\tselected_cells: [],\n\t\t\t\t\tselected_header: col,\n\t\t\t\t\theader_edit: editable ? col : false\n\t\t\t\t}\n\t\t\t}));\n\t\t},\n\t\tend_header_edit: (key: string) => {\n\t\t\tif (key === \"Escape\" || key === \"Enter\" || key === \"Tab\") {\n\t\t\t\tstate.update((s) => ({\n\t\t\t\t\t...s,\n\t\t\t\t\tui_state: {\n\t\t\t\t\t\t...s.ui_state,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t\theader_edit: false\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\ttrigger_change: async (\n\t\t\tdata: any[][],\n\t\t\theaders: any[],\n\t\t\tprevious_data: string[][],\n\t\t\tprevious_headers: string[],\n\t\t\tvalue_is_output: boolean,\n\t\t\tdispatch: {\n\t\t\t\t(e: \"change\", detail: DataframeValue): void;\n\t\t\t\t(e: \"input\", detail?: undefined): void;\n\t\t\t\t(e: \"select\", detail: any): void;\n\t\t\t\t(e: \"search\", detail: string | null): void;\n\t\t\t}\n\t\t): Promise<void> => {\n\t\t\tconst current_state = get(state);\n\t\t\tif (current_state.current_search_query) return;\n\n\t\t\tconst current_headers = headers.map((h) => h.value);\n\t\t\tconst current_data = data.map((row) =>\n\t\t\t\trow.map((cell) => String(cell.value))\n\t\t\t);\n\n\t\t\tif (\n\t\t\t\t!dequal(current_data, previous_data) ||\n\t\t\t\t!dequal(current_headers, previous_headers)\n\t\t\t) {\n\t\t\t\tif (!dequal(current_headers, previous_headers)) {\n\t\t\t\t\treset_sort_state();\n\t\t\t\t}\n\n\t\t\t\tdispatch(\"change\", {\n\t\t\t\t\tdata: data.map((row) => row.map((cell) => cell.value)),\n\t\t\t\t\theaders: headers.map((h) => h.value),\n\t\t\t\t\tmetadata: null\n\t\t\t\t});\n\t\t\t\tif (!value_is_output) {\n\t\t\t\t\tdispatch(\"input\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tget_selected_cells: () => {\n\t\t\tconst current_state = get(state);\n\t\t\treturn current_state.ui_state.selected_cells;\n\t\t},\n\t\tget_active_cell_menu: () => {\n\t\t\tconst current_state = get(state);\n\t\t\treturn current_state.ui_state.active_cell_menu;\n\t\t},\n\t\tget_active_button: () => {\n\t\t\tconst current_state = get(state);\n\t\t\treturn current_state.ui_state.active_button;\n\t\t},\n\t\tset_active_button: (button) => {\n\t\t\tstate.update((s) => ({\n\t\t\t\t...s,\n\t\t\t\tui_state: { ...s.ui_state, active_button: button }\n\t\t\t}));\n\t\t},\n\t\treset_sort_state\n\t};\n}\n\nexport function create_dataframe_context(config: {\n\tshow_fullscreen_button: boolean;\n\tshow_copy_button: boolean;\n\tshow_search: \"none\" | \"search\" | \"filter\";\n\tshow_row_numbers: boolean;\n\teditable: boolean;\n\tpinned_columns: number;\n\tshow_label: boolean;\n\tline_breaks: boolean;\n\twrap: boolean;\n\tmax_height: number;\n\tcolumn_widths: string[];\n\tmax_chars: number | undefined;\n}): DataFrameContext {\n\tconst instance_id = Symbol(\n\t\t`dataframe_${Math.random().toString(36).substring(2)}`\n\t);\n\tconst state = writable<DataFrameState>({\n\t\tconfig,\n\t\tcurrent_search_query: null,\n\t\tsort_state: {\n\t\t\tsort_columns: [],\n\t\t\trow_order: []\n\t\t},\n\t\tui_state: {\n\t\t\tactive_cell_menu: null,\n\t\t\tactive_header_menu: null,\n\t\t\tselected_cells: [],\n\t\t\tselected: false,\n\t\t\tediting: false,\n\t\t\theader_edit: false,\n\t\t\tselected_header: false,\n\t\t\tactive_button: null\n\t\t}\n\t});\n\n\tconst actions = create_actions(state);\n\tconst context: DataFrameContext = { state, actions };\n\tsetContext(instance_id, context);\n\tsetContext(DATAFRAME_KEY, { instance_id, context });\n\treturn context;\n}\n\nexport function get_dataframe_context(): DataFrameContext {\n\tconst ctx = getContext<{ instance_id: symbol; context: DataFrameContext }>(\n\t\tDATAFRAME_KEY\n\t);\n\treturn ctx ? ctx.context : getContext<DataFrameContext>(DATAFRAME_KEY);\n}\n","<script lang=\"ts\">\n\texport let position: \"column\" | \"row\";\n\texport let coords: [number, number];\n\texport let on_click: (() => void) | null = null;\n\n\t$: is_first_position =\n\t\tposition === \"column\" ? coords[0] === 0 : coords[1] === 0;\n\t$: direction =\n\t\tposition === \"column\"\n\t\t\t? is_first_position\n\t\t\t\t? \"down\"\n\t\t\t\t: \"up\"\n\t\t\t: is_first_position\n\t\t\t\t? \"right\"\n\t\t\t\t: \"left\";\n</script>\n\n<button\n\tclass=\"selection-button selection-button-{position} {is_first_position\n\t\t? `move-${direction}`\n\t\t: ''}\"\n\ton:click|stopPropagation={() => on_click && on_click()}\n\taria-label={`Select ${position}`}\n>\n\t<span class={direction}>\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t<path\n\t\t\t\td=\"m16.707 13.293-4-4a1 1 0 0 0-1.414 0l-4 4A1 1 0 0 0 8 15h8a1 1 0 0 0 .707-1.707z\"\n\t\t\t\tdata-name={direction}\n\t\t\t/>\n\t\t</svg>\n\t</span>\n</button>\n\n<style>\n\t.selection-button {\n\t\tposition: absolute;\n\t\tbackground: var(--color-accent);\n\t\twidth: var(--size-3);\n\t\theight: var(--size-5);\n\t\tcolor: var(--background-fill-primary);\n\t}\n\n\t.selection-button-column {\n\t\ttop: -15px;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%) rotate(90deg);\n\t\tborder-radius: var(--radius-sm) 0 0 var(--radius-sm);\n\t}\n\n\t.selection-button-row {\n\t\tleft: calc(var(--size-2-5) * -1);\n\t\tborder-radius: var(--radius-sm) 0 0 var(--radius-sm);\n\t}\n\n\t.move-down {\n\t\tbottom: -14px;\n\t\ttop: auto;\n\t\tborder-radius: 0 var(--radius-sm) var(--radius-sm) 0;\n\t}\n\n\t.move-right {\n\t\tleft: auto;\n\t\tright: calc(var(--size-2-5) * -1);\n\t\tborder-radius: 0 var(--radius-sm) var(--radius-sm) 0;\n\t}\n\n\tsvg {\n\t\tfill: currentColor;\n\t}\n\n\tspan {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.up {\n\t\ttransform: rotate(-90deg);\n\t}\n\n\t.down {\n\t\ttransform: rotate(90deg);\n\t}\n\n\t.left {\n\t\ttransform: rotate(-90deg);\n\t}\n\n\t.right {\n\t\ttransform: rotate(90deg);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown-code\";\n\timport type { I18nFormatter } from \"@gradio/utils\";\n\timport SelectionButtons from \"./icons/SelectionButtons.svelte\";\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\"\n\t\t| \"image\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\texport let is_static = false;\n\texport let root: string;\n\texport let max_chars: number | null = null;\n\texport let components: Record<string, any> = {};\n\texport let i18n: I18nFormatter;\n\texport let is_dragging = false;\n\texport let wrap_text = false;\n\n\texport let show_selection_buttons = false;\n\texport let coords: [number, number] | null = null;\n\texport let on_select_column: ((col: number) => void) | null = null;\n\texport let on_select_row: ((row: number) => void) | null = null;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tblur: void;\n\t\tkeydown: KeyboardEvent;\n\t}>();\n\n\tlet is_expanded = false;\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction truncate_text(\n\t\ttext: string | number,\n\t\tmax_length: number | null = null,\n\t\tis_image = false\n\t): string {\n\t\tif (is_image) return String(text);\n\t\tconst str = String(text);\n\t\tif (!max_length || max_length <= 0) return str;\n\t\tif (str.length <= max_length) return str;\n\t\treturn str.slice(0, max_length) + \"...\";\n\t}\n\n\t$: should_truncate =\n\t\t!edit && !is_expanded && max_chars !== null && max_chars > 0;\n\n\t$: display_content = editable\n\t\t? value\n\t\t: display_value !== null\n\t\t\t? display_value\n\t\t\t: value;\n\n\t$: display_text = should_truncate\n\t\t? truncate_text(display_content, max_chars, datatype === \"image\")\n\t\t: display_content;\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\n\t\trequestAnimationFrame(() => {\n\t\t\tnode.focus();\n\t\t});\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n\n\tfunction handle_keydown(event: KeyboardEvent): void {\n\t\tif (event.key === \"Enter\") {\n\t\t\tif (edit) {\n\t\t\t\tvalue = _value;\n\t\t\t\tdispatch(\"blur\");\n\t\t\t} else if (!header) {\n\t\t\t\tis_expanded = !is_expanded;\n\t\t\t}\n\t\t}\n\t\tdispatch(\"keydown\", event);\n\t}\n\n\tfunction handle_click(): void {\n\t\tif (!edit && !header) {\n\t\t\tis_expanded = !is_expanded;\n\t\t}\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\treadonly={is_static}\n\t\taria-readonly={is_static}\n\t\trole=\"textbox\"\n\t\taria-label={is_static ? \"Cell is read-only\" : \"Edit cell\"}\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\ton:mousedown|stopPropagation\n\t\ton:mouseup|stopPropagation\n\t\ton:click|stopPropagation\n\t\tuse:use_focus\n\t\ton:keydown={handle_keydown}\n\t/>\n{/if}\n\n<span\n\tclass:dragging={is_dragging}\n\ton:click={handle_click}\n\ton:keydown={handle_keydown}\n\ttabindex=\"0\"\n\trole=\"button\"\n\tclass:edit\n\tclass:expanded={is_expanded}\n\tclass:multiline={header}\n\ton:focus|preventDefault\n\tstyle={styling}\n\tdata-editable={editable}\n\tdata-max-chars={max_chars}\n\tdata-expanded={is_expanded}\n\tplaceholder=\" \"\n\tclass:text={datatype === \"str\"}\n\tclass:wrap={wrap_text}\n>\n\t{#if datatype === \"image\" && components.image}\n\t\t<svelte:component\n\t\t\tthis={components.image}\n\t\t\tvalue={{ url: display_text }}\n\t\t\tshow_label={false}\n\t\t\tlabel=\"cell-image\"\n\t\t\tshow_download_button={false}\n\t\t\t{i18n}\n\t\t\tgradio={{ dispatch: () => {} }}\n\t\t/>\n\t{:else if datatype === \"html\"}\n\t\t{@html display_text}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={display_text.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t\t{root}\n\t\t/>\n\t{:else}\n\t\t{display_text}\n\t{/if}\n</span>\n{#if show_selection_buttons && coords && on_select_column && on_select_row}\n\t<SelectionButtons\n\t\tposition=\"column\"\n\t\t{coords}\n\t\ton_click={() => on_select_column(coords[1])}\n\t/>\n\t<SelectionButtons\n\t\tposition=\"row\"\n\t\t{coords}\n\t\ton_click={() => on_select_row(coords[0])}\n\t/>\n{/if}\n\n<style>\n\t.dragging {\n\t\tcursor: crosshair !important;\n\t}\n\n\tinput {\n\t\tposition: absolute;\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: text;\n\t\twidth: calc(100% - var(--size-2));\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t\toutline: none;\n\t\t-webkit-user-select: text;\n\t\t-moz-user-select: text;\n\t\t-ms-user-select: text;\n\t\tuser-select: text;\n\t\tcursor: text;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: hidden;\n\t}\n\n\tspan.text.expanded {\n\t\theight: auto;\n\t\tmin-height: 100%;\n\t\twhite-space: pre-wrap;\n\t\tword-break: break-word;\n\t\toverflow: visible;\n\t}\n\n\t.multiline {\n\t\twhite-space: pre;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont-weight: var(--weight-bold);\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tmargin-left: var(--size-1);\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n\n\tspan :global(img) {\n\t\tmax-height: 100px;\n\t\twidth: auto;\n\t\tobject-fit: contain;\n\t}\n\n\tinput:read-only {\n\t\tcursor: not-allowed;\n\t}\n\n\t.wrap,\n\t.wrap.expanded {\n\t\twhite-space: normal;\n\t\tword-wrap: break-word;\n\t\toverflow-wrap: break-word;\n\t\tword-wrap: break-word;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let index: number | null = null;\n\texport let is_header = false;\n</script>\n\n{#if is_header}\n\t<th tabindex=\"-1\" class=\"row-number\">\n\t\t<div class=\"cell-wrap\">\n\t\t\t<div class=\"header-content\">\n\t\t\t\t<div class=\"header-text\"></div>\n\t\t\t</div>\n\t\t</div>\n\t</th>\n{:else}\n\t<td class=\"row-number\" tabindex=\"-1\" data-row={index} data-col=\"row-number\">\n\t\t{index !== null ? index + 1 : \"\"}\n\t</td>\n{/if}\n\n<style>\n\t.row-number {\n\t\ttext-align: center;\n\t\tpadding: var(--size-1);\n\t\tmin-width: var(--size-12);\n\t\twidth: var(--size-12);\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t\tfont-weight: var(--weight-semibold);\n\t\tbackground: var(--table-even-background-fill);\n\t\tborder-right: 1px solid var(--border-color-primary);\n\t}\n\n\t:global(tr:nth-child(odd)) .row-number {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t:global(tr:nth-child(even)) .row-number {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let on_click: (event: MouseEvent) => void;\n</script>\n\n<button\n\taria-label=\"Open cell menu\"\n\tclass=\"cell-menu-button\"\n\taria-haspopup=\"menu\"\n\ton:click={on_click}\n\ton:touchstart={(event) => {\n\t\tevent.preventDefault();\n\t\tconst touch = event.touches[0];\n\t\tconst mouseEvent = new MouseEvent(\"click\", {\n\t\t\tclientX: touch.clientX,\n\t\t\tclientY: touch.clientY,\n\t\t\tbubbles: true,\n\t\t\tcancelable: true,\n\t\t\tview: window\n\t\t});\n\t\ton_click(mouseEvent);\n\t}}\n>\n\t&#8942;\n</button>\n\n<style>\n\t.cell-menu-button {\n\t\tflex-shrink: 0;\n\t\tdisplay: none;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--block-radius);\n\t\twidth: var(--size-5);\n\t\theight: var(--size-5);\n\t\tmin-width: var(--size-5);\n\t\tpadding: 0;\n\t\tmargin-right: var(--spacing-sm);\n\t\tz-index: 2;\n\t\tposition: absolute;\n\t\tright: var(--size-1);\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t}\n</style>\n","<div class=\"wrapper\" aria-label=\"Static column\">\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"13\"\n\t\theight=\"13\"\n\t\tviewBox=\"0 0 24 24\"\n\t\tfill=\"none\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"2\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t>\n\t\t<rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\n\t\t<path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\n\t</svg>\n</div>\n\n<style>\n\t.wrapper {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let size = 16;\n</script>\n\n<svg\n\twidth={size}\n\theight={size}\n\tviewBox=\"0 0 16 16\"\n\tfill=\"none\"\n\txmlns=\"http://www.w3.org/2000/svg\"\n>\n\t<path\n\t\td=\"M4 8L8 4L12 8\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t/>\n\t<path\n\t\td=\"M8 4V12\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\texport let size = 16;\n</script>\n\n<svg\n\twidth={size}\n\theight={size}\n\tviewBox=\"0 0 16 16\"\n\tfill=\"none\"\n\txmlns=\"http://www.w3.org/2000/svg\"\n>\n\t<path\n\t\td=\"M4 8L8 12L12 8\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t\tstroke-linejoin=\"round\"\n\t/>\n\t<path\n\t\td=\"M8 12V4\"\n\t\tstroke=\"currentColor\"\n\t\tstroke-width=\"1.5\"\n\t\tstroke-linecap=\"round\"\n\t/>\n</svg>\n","<script lang=\"ts\">\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport CellMenuButton from \"./CellMenuButton.svelte\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport type { SortDirection } from \"./context/table_context\";\n\timport Padlock from \"./icons/Padlock.svelte\";\n\timport SortArrowUp from \"./icons/SortArrowUp.svelte\";\n\timport SortArrowDown from \"./icons/SortArrowDown.svelte\";\n\n\texport let value: string;\n\texport let i: number;\n\texport let actual_pinned_columns: number;\n\texport let header_edit: number | false;\n\texport let selected_header: number | false;\n\texport let get_sort_status: (\n\t\tvalue: string,\n\t\theaders: string[]\n\t) => \"none\" | \"asc\" | \"desc\";\n\texport let headers: string[];\n\texport let get_cell_width: (index: number) => string;\n\texport let handle_header_click: (event: MouseEvent, col: number) => void;\n\texport let toggle_header_menu: (event: MouseEvent, col: number) => void;\n\texport let end_header_edit: (event: CustomEvent<KeyboardEvent>) => void;\n\texport let sort_columns: { col: number; direction: SortDirection }[] = [];\n\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let line_breaks: boolean;\n\texport let max_chars: number | undefined;\n\texport let root: string;\n\texport let editable: boolean;\n\texport let i18n: I18nFormatter;\n\texport let el: HTMLInputElement | null;\n\texport let is_static: boolean;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\n\t$: can_add_columns = col_count && col_count[1] === \"dynamic\";\n\t$: sort_index = sort_columns.findIndex((item) => item.col === i);\n\t$: sort_priority = sort_index !== -1 ? sort_index + 1 : null;\n\t$: current_direction =\n\t\tsort_index !== -1 ? sort_columns[sort_index].direction : null;\n\n\tfunction get_header_position(col_index: number): string {\n\t\tif (col_index >= actual_pinned_columns) {\n\t\t\treturn \"auto\";\n\t\t}\n\n\t\tif (col_index === 0) {\n\t\t\treturn \"0\";\n\t\t}\n\n\t\tconst previous_widths = Array(col_index)\n\t\t\t.fill(0)\n\t\t\t.map((_, idx) => {\n\t\t\t\treturn get_cell_width(idx);\n\t\t\t})\n\t\t\t.join(\" + \");\n\n\t\treturn `calc(${previous_widths})`;\n\t}\n</script>\n\n<th\n\tclass:pinned-column={i < actual_pinned_columns}\n\tclass:last-pinned={i === actual_pinned_columns - 1}\n\tclass:focus={header_edit === i || selected_header === i}\n\tclass:sorted={sort_index !== -1}\n\taria-sort={get_sort_status(value, headers) === \"none\"\n\t\t? \"none\"\n\t\t: get_sort_status(value, headers) === \"asc\"\n\t\t\t? \"ascending\"\n\t\t\t: \"descending\"}\n\tstyle=\"width: {get_cell_width(i)}; left: {get_header_position(i)};\"\n\ton:click={(event) => handle_header_click(event, i)}\n\ton:mousedown={(event) => {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}}\n\ttitle={value}\n>\n\t<div class=\"cell-wrap\">\n\t\t<div class=\"header-content\">\n\t\t\t<button\n\t\t\t\tclass=\"header-button\"\n\t\t\t\ton:click={(event) => handle_header_click(event, i)}\n\t\t\t\ton:mousedown={(event) => {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}}\n\t\t\t\ttitle={value}\n\t\t\t>\n\t\t\t\t<EditableCell\n\t\t\t\t\t{max_chars}\n\t\t\t\t\tbind:value\n\t\t\t\t\tbind:el\n\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t{line_breaks}\n\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\ton:keydown={(event) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tevent.detail.key === \"Enter\" ||\n\t\t\t\t\t\t\tevent.detail.key === \"Escape\" ||\n\t\t\t\t\t\t\tevent.detail.key === \"Tab\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tend_header_edit(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\theader\n\t\t\t\t\t{root}\n\t\t\t\t\t{editable}\n\t\t\t\t\t{is_static}\n\t\t\t\t\t{i18n}\n\t\t\t\t/>\n\t\t\t\t{#if sort_index !== -1}\n\t\t\t\t\t<div class=\"sort-indicators\">\n\t\t\t\t\t\t<span class=\"sort-arrow\">\n\t\t\t\t\t\t\t{#if current_direction === \"asc\"}\n\t\t\t\t\t\t\t\t<SortArrowUp size={12} />\n\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t<SortArrowDown size={12} />\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{#if sort_columns.length > 1}\n\t\t\t\t\t\t\t<span class=\"sort-priority\">\n\t\t\t\t\t\t\t\t{sort_priority}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</div>\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t\t{#if is_static}\n\t\t\t\t<Padlock />\n\t\t\t{/if}\n\t\t</div>\n\t\t{#if can_add_columns}\n\t\t\t<CellMenuButton on_click={(event) => toggle_header_menu(event, i)} />\n\t\t{/if}\n\t</div>\n</th>\n\n<style>\n\tth {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t\tbackground: var(--table-even-background-fill);\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t\tborder-left-width: 0px;\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\tth.focus {\n\t\t--ring-color: var(--color-accent);\n\t\tbox-shadow: inset 0 0 0 2px var(--ring-color);\n\t\tz-index: 4;\n\t}\n\n\tth.focus :global(.cell-menu-button) {\n\t\tdisplay: flex;\n\t}\n\n\tth:hover :global(.cell-menu-button) {\n\t\tdisplay: flex;\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: flex-start;\n\t\toutline: none;\n\t\tmin-height: var(--size-9);\n\t\tposition: relative;\n\t\theight: 100%;\n\t\tpadding: var(--size-2);\n\t\tbox-sizing: border-box;\n\t\tmargin: 0;\n\t\tgap: var(--size-1);\n\t\toverflow: visible;\n\t\tmin-width: 0;\n\t\tborder-radius: var(--table-radius);\n\t}\n\n\t.header-content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t\tmin-width: 0;\n\t\twhite-space: normal;\n\t\toverflow-wrap: break-word;\n\t\tword-break: normal;\n\t\theight: 100%;\n\t\tgap: var(--size-1);\n\t}\n\n\t.header-button {\n\t\tdisplay: flex;\n\t\ttext-align: left;\n\t\twidth: 100%;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tposition: relative;\n\t}\n\n\t.sort-indicators {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmargin-left: var(--size-1);\n\t\tgap: var(--size-1);\n\t}\n\n\t.sort-arrow {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.sort-priority {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tfont-size: var(--size-2);\n\t\tbackground-color: var(--button-secondary-background-fill);\n\t\tcolor: var(--body-text-color);\n\t\tborder-radius: var(--radius-sm);\n\t\twidth: var(--size-2-5);\n\t\theight: var(--size-2-5);\n\t\tpadding: var(--size-1-5);\n\t}\n\n\t.pinned-column {\n\t\tposition: sticky;\n\t\tz-index: 5;\n\t\tborder-right: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport CellMenuButton from \"./CellMenuButton.svelte\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport type { Datatype } from \"./utils\";\n\timport { is_cell_in_selection } from \"./selection_utils\";\n\n\texport let value: string | number;\n\texport let index: number;\n\texport let j: number;\n\texport let actual_pinned_columns: number;\n\texport let get_cell_width: (index: number) => string;\n\texport let handle_cell_click: (\n\t\tevent: MouseEvent,\n\t\trow: number,\n\t\tcol: number\n\t) => void;\n\texport let toggle_cell_menu: (\n\t\tevent: MouseEvent,\n\t\trow: number,\n\t\tcol: number\n\t) => void;\n\texport let is_cell_selected: (\n\t\tcoords: [number, number],\n\t\tselected_cells: [number, number][]\n\t) => string;\n\texport let should_show_cell_menu: (\n\t\tcoords: [number, number],\n\t\tselected_cells: [number, number][],\n\t\teditable: boolean\n\t) => boolean;\n\texport let selected_cells: [number, number][];\n\texport let copy_flash: boolean;\n\texport let active_cell_menu: {\n\t\trow: number;\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null;\n\texport let styling: string | undefined;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let line_breaks: boolean;\n\texport let datatype: Datatype;\n\texport let editing: [number, number] | false;\n\texport let clear_on_focus: boolean;\n\texport let max_chars: number | undefined;\n\texport let root: string;\n\texport let editable: boolean;\n\texport let is_static = false;\n\texport let i18n: I18nFormatter;\n\texport let components: Record<string, any> = {};\n\texport let el: {\n\t\tcell: HTMLTableCellElement | null;\n\t\tinput: HTMLInputElement | null;\n\t};\n\texport let handle_select_column: (col: number) => void;\n\texport let handle_select_row: (row: number) => void;\n\texport let is_dragging: boolean;\n\texport let wrap = false;\n\n\tfunction get_cell_position(col_index: number): string {\n\t\tif (col_index >= actual_pinned_columns) {\n\t\t\treturn \"auto\";\n\t\t}\n\n\t\tif (col_index === 0) {\n\t\t\treturn \"0\";\n\t\t}\n\n\t\tconst previous_widths = Array(col_index)\n\t\t\t.fill(0)\n\t\t\t.map((_, idx) => {\n\t\t\t\treturn get_cell_width(idx);\n\t\t\t})\n\t\t\t.join(\" + \");\n\n\t\treturn `calc(${previous_widths})`;\n\t}\n\n\t$: cell_classes = is_cell_selected([index, j], selected_cells || []);\n\t$: is_in_selection = is_cell_in_selection([index, j], selected_cells);\n\t$: has_no_top = cell_classes.includes(\"no-top\");\n\t$: has_no_bottom = cell_classes.includes(\"no-bottom\");\n\t$: has_no_left = cell_classes.includes(\"no-left\");\n\t$: has_no_right = cell_classes.includes(\"no-right\");\n</script>\n\n<td\n\tclass:pinned-column={j < actual_pinned_columns}\n\tclass:last-pinned={j === actual_pinned_columns - 1}\n\ttabindex={j < actual_pinned_columns ? -1 : 0}\n\tbind:this={el.cell}\n\tdata-row={index}\n\tdata-col={j}\n\tdata-testid={`cell-${index}-${j}`}\n\ton:mousedown={(e) => handle_cell_click(e, index, j)}\n\ton:contextmenu|preventDefault={(e) => toggle_cell_menu(e, index, j)}\n\tstyle=\"width: {get_cell_width(j)}; left: {get_cell_position(j)}; {styling ||\n\t\t''}\"\n\tclass:flash={copy_flash && is_in_selection}\n\tclass:cell-selected={is_in_selection}\n\tclass:no-top={has_no_top}\n\tclass:no-bottom={has_no_bottom}\n\tclass:no-left={has_no_left}\n\tclass:no-right={has_no_right}\n\tclass:menu-active={active_cell_menu &&\n\t\tactive_cell_menu.row === index &&\n\t\tactive_cell_menu.col === j}\n\tclass:dragging={is_dragging}\n>\n\t<div class=\"cell-wrap\">\n\t\t<EditableCell\n\t\t\tbind:value\n\t\t\tbind:el={el.input}\n\t\t\tdisplay_value={String(value)}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\t{editable}\n\t\t\t{is_static}\n\t\t\tedit={editing && editing[0] === index && editing[1] === j}\n\t\t\t{datatype}\n\t\t\ton:blur={() => {\n\t\t\t\tclear_on_focus = false;\n\t\t\t}}\n\t\t\ton:focus={() => {\n\t\t\t\tconst row = index;\n\t\t\t\tconst col = j;\n\t\t\t\tif (!selected_cells.some(([r, c]) => r === row && c === col)) {\n\t\t\t\t\tselected_cells = [[row, col]];\n\t\t\t\t}\n\t\t\t}}\n\t\t\t{clear_on_focus}\n\t\t\t{root}\n\t\t\t{max_chars}\n\t\t\t{i18n}\n\t\t\t{components}\n\t\t\tshow_selection_buttons={selected_cells.length === 1 &&\n\t\t\t\tselected_cells[0][0] === index &&\n\t\t\t\tselected_cells[0][1] === j}\n\t\t\tcoords={[index, j]}\n\t\t\ton_select_column={handle_select_column}\n\t\t\ton_select_row={handle_select_row}\n\t\t\t{is_dragging}\n\t\t\twrap_text={wrap}\n\t\t/>\n\t\t{#if editable && should_show_cell_menu([index, j], selected_cells, editable)}\n\t\t\t<CellMenuButton on_click={(event) => toggle_cell_menu(event, index, j)} />\n\t\t{/if}\n\t</div>\n</td>\n\n<style>\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: flex-start;\n\t\toutline: none;\n\t\tmin-height: var(--size-9);\n\t\tposition: relative;\n\t\theight: 100%;\n\t\tpadding: var(--size-2);\n\t\tbox-sizing: border-box;\n\t\tmargin: 0;\n\t\tgap: var(--size-1);\n\t\toverflow: visible;\n\t\tmin-width: 0;\n\t\tborder-radius: var(--table-radius);\n\t}\n\n\t.cell-selected {\n\t\t--ring-color: var(--color-accent);\n\t\tbox-shadow: inset 0 0 0 2px var(--ring-color);\n\t\tz-index: 2;\n\t\tposition: relative;\n\t}\n\n\t.cell-selected :global(.cell-menu-button) {\n\t\tdisplay: flex;\n\t}\n\n\t.flash.cell-selected {\n\t\tanimation: flash-color 700ms ease-out;\n\t}\n\n\t@keyframes flash-color {\n\t\t0%,\n\t\t30% {\n\t\t\tbackground: var(--color-accent-copied);\n\t\t}\n\n\t\t100% {\n\t\t\tbackground: transparent;\n\t\t}\n\t}\n\n\t.pinned-column {\n\t\tposition: sticky;\n\t\tz-index: 3;\n\t\tborder-right: none;\n\t}\n\n\t.pinned-column:nth-child(odd) {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.pinned-column:nth-child(even) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\ttd:first-child {\n\t\tborder-left-width: 0px;\n\t}\n\n\t:global(tr:last-child) td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\t:global(tr:last-child) td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\t.dragging {\n\t\tcursor: crosshair;\n\t}\n\n\t/* Add back the cell selection border styles */\n\t.cell-selected.no-top {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-right {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-left {\n\t\tbox-shadow:\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-right {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-left {\n\t\tbox-shadow:\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-right {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-bottom {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left.no-right {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-left.no-right {\n\t\tbox-shadow: inset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-left.no-right {\n\t\tbox-shadow: inset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left.no-top.no-bottom {\n\t\tbox-shadow: inset -2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-right.no-top.no-bottom {\n\t\tbox-shadow: inset 2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-bottom.no-left.no-right {\n\t\tbox-shadow: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let on_click: () => void;\n</script>\n\n<button class=\"add-row-button\" on:click={on_click} aria-label=\"Add row\">\n\t+\n</button>\n\n<style>\n\t.add-row-button {\n\t\twidth: 100%;\n\t\tpadding: var(--size-1);\n\t\tbackground: transparent;\n\t\tborder: 1px dashed var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tcursor: pointer;\n\t\ttransition: all 150ms;\n\t\tmargin-top: var(--size-2);\n\t\tz-index: 10;\n\t\tposition: relative;\n\t\tpointer-events: auto;\n\t}\n\n\t.add-row-button:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t\tborder-style: solid;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick, createEventDispatcher } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 20;\n\texport let selected: number | false;\n\texport let disable_scroll = false;\n\texport let show_scroll_button = false;\n\texport let viewport: HTMLTableElement;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tscroll_top: number;\n\t}>();\n\n\tlet height = \"100%\";\n\n\tlet average_height = 30;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport_height = 200;\n\tlet visible: { index: number; data: any[] }[] = [];\n\tlet viewport_box: DOMRectReadOnly;\n\n\t$: viewport_height = viewport_box?.height || 200;\n\n\tconst is_browser = typeof window !== \"undefined\";\n\tconst raf = is_browser\n\t\t? window.requestAnimationFrame\n\t\t: (cb: (...args: any[]) => void) => cb();\n\n\t$: mounted && raf(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// force header height calculation first\n\t\thead_height =\n\t\t\tviewport.querySelector(\".thead\")?.getBoundingClientRect().height || 0;\n\t\tawait tick();\n\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\traf(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\tshow_scroll_button = scroll_top > 100;\n\n\t\tif (show_scroll_button) {\n\t\t\tdispatch(\"scroll_top\", scroll_top);\n\t\t}\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = is_browser\n\t\t? sortedItems.slice(start, end).map((data, i) => {\n\t\t\t\treturn { index: i + start, data };\n\t\t\t})\n\t\t: sortedItems\n\t\t\t\t.slice(0, (max_height / sortedItems.length) * average_height + 1)\n\t\t\t\t.map((data, i) => {\n\t\t\t\t\treturn { index: i + start, data };\n\t\t\t\t});\n\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<div>\n\t\t<table\n\t\t\tclass=\"table\"\n\t\t\tclass:disable-scroll={disable_scroll}\n\t\t\tbind:this={viewport}\n\t\t\tbind:contentRect={viewport_box}\n\t\t\ton:scroll={handle_scroll}\n\t\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px; --max-height: {max_height}px\"\n\t\t>\n\t\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t\t<slot name=\"thead\" />\n\t\t\t</thead>\n\t\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t\t</slot>\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</tbody>\n\t\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t\t<slot name=\"tfoot\" />\n\t\t\t</tfoot>\n\t\t</table>\n\t</div>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: var(--max-height);\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\tborder-collapse: separate;\n\t\tscrollbar-width: thin;\n\t\tscrollbar-color: rgba(128, 128, 128, 0.5) transparent;\n\t}\n\n\ttable::-webkit-scrollbar {\n\t\twidth: 4px;\n\t\theight: 4px;\n\t}\n\n\ttable::-webkit-scrollbar-track {\n\t\tbackground: transparent;\n\t}\n\n\ttable::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(128, 128, 128, 0.5);\n\t\tborder-radius: 4px;\n\t}\n\n\ttable:hover {\n\t\tscrollbar-color: rgba(160, 160, 160, 0.7) transparent;\n\t}\n\n\ttable:hover::-webkit-scrollbar-thumb {\n\t\tbackground-color: rgba(160, 160, 160, 0.7);\n\t\tborder-radius: 4px;\n\t\twidth: 4px;\n\t}\n\n\t@media (hover: none) {\n\t\ttable {\n\t\t\tscrollbar-color: rgba(160, 160, 160, 0.7) transparent;\n\t\t}\n\n\t\ttable::-webkit-scrollbar-thumb {\n\t\t\tbackground-color: rgba(160, 160, 160, 0.7);\n\t\t\tborder-radius: 4px;\n\t\t}\n\t}\n\n\t@media (pointer: coarse) {\n\t\ttable::-webkit-scrollbar {\n\t\t\twidth: 8px;\n\t\t\theight: 8px;\n\t\t}\n\t}\n\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\ttbody :global(td.pinned-column) {\n\t\tposition: sticky;\n\t\tz-index: 3;\n\t}\n\n\ttbody :global(tr:nth-child(odd)) :global(td.pinned-column) {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\ttbody :global(tr:nth-child(even)) :global(td.pinned-column) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\ttbody :global(td.last-pinned) {\n\t\tborder-right: 1px solid var(--border-color-primary);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground: var(--background-fill-primary);\n\t\tz-index: 7;\n\t}\n\n\tthead :global(th) {\n\t\tbackground: var(--table-even-background-fill) !important;\n\t}\n\n\tthead :global(th.pinned-column) {\n\t\tposition: sticky;\n\t\tz-index: 7;\n\t\tbackground: var(--table-even-background-fill) !important;\n\t}\n\n\tthead :global(th.last-pinned) {\n\t\tborder-right: 1px solid var(--border-color-primary);\n\t}\n\n\t.table.disable-scroll {\n\t\toverflow: hidden !important;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let icon: string;\n</script>\n\n{#if icon == \"add-column-right\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"4\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H19M16 8L19 12L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-column-left\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"16\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H5M8 8L5 12L8 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-above\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"16\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V5M8 8L12 5L16 8\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-below\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"4\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V19M8 16L12 19L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-row\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"5\"\n\t\t\ty=\"10\"\n\t\t\twidth=\"14\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M8 7L16 17M16 7L8 17\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-column\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"10\"\n\t\t\ty=\"5\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"14\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M7 8L17 16M17 8L7 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"sort-asc\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<path\n\t\t\td=\"M8 16L12 12L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V19\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M5 7H19\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"sort-desc\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<path\n\t\t\td=\"M8 12L12 16L16 12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t\tstroke-linejoin=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 16V9\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M5 5H19\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"clear-sort\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<path\n\t\t\td=\"M5 5H19\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M5 9H15\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M5 13H11\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M5 17H7\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M17 17L21 21M21 17L17 21\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{/if}\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport CellMenuIcons from \"./CellMenuIcons.svelte\";\n\timport type { I18nFormatter } from \"js/utils/src\";\n\timport type { SortDirection } from \"./context/table_context\";\n\n\texport let x: number;\n\texport let y: number;\n\texport let on_add_row_above: () => void;\n\texport let on_add_row_below: () => void;\n\texport let on_add_column_left: () => void;\n\texport let on_add_column_right: () => void;\n\texport let row: number;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let on_delete_row: () => void;\n\texport let on_delete_col: () => void;\n\texport let can_delete_rows: boolean;\n\texport let can_delete_cols: boolean;\n\texport let on_sort: (direction: SortDirection) => void = () => {};\n\texport let on_clear_sort: () => void = () => {};\n\texport let sort_direction: SortDirection | null = null;\n\texport let sort_priority: number | null = null;\n\texport let editable = true;\n\n\texport let i18n: I18nFormatter;\n\tlet menu_element: HTMLDivElement;\n\n\t$: is_header = row === -1;\n\t$: can_add_rows = editable && row_count[1] === \"dynamic\";\n\t$: can_add_columns = editable && col_count[1] === \"dynamic\";\n\n\tonMount(() => {\n\t\tposition_menu();\n\t});\n\n\tfunction position_menu(): void {\n\t\tif (!menu_element) return;\n\n\t\tconst viewport_width = window.innerWidth;\n\t\tconst viewport_height = window.innerHeight;\n\t\tconst menu_rect = menu_element.getBoundingClientRect();\n\n\t\tlet new_x = x - 30;\n\t\tlet new_y = y - 20;\n\n\t\tif (new_x + menu_rect.width > viewport_width) {\n\t\t\tnew_x = x - menu_rect.width + 10;\n\t\t}\n\n\t\tif (new_y + menu_rect.height > viewport_height) {\n\t\t\tnew_y = y - menu_rect.height + 10;\n\t\t}\n\n\t\tmenu_element.style.left = `${new_x}px`;\n\t\tmenu_element.style.top = `${new_y}px`;\n\t}\n</script>\n\n<div bind:this={menu_element} class=\"cell-menu\" role=\"menu\">\n\t{#if is_header}\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_sort(\"asc\")}\n\t\t\tclass:active={sort_direction === \"asc\"}\n\t\t>\n\t\t\t<CellMenuIcons icon=\"sort-asc\" />\n\t\t\t{i18n(\"dataframe.sort_ascending\")}\n\t\t\t{#if sort_direction === \"asc\" && sort_priority !== null}\n\t\t\t\t<span class=\"priority\">{sort_priority}</span>\n\t\t\t{/if}\n\t\t</button>\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_sort(\"desc\")}\n\t\t\tclass:active={sort_direction === \"desc\"}\n\t\t>\n\t\t\t<CellMenuIcons icon=\"sort-desc\" />\n\t\t\t{i18n(\"dataframe.sort_descending\")}\n\t\t\t{#if sort_direction === \"desc\" && sort_priority !== null}\n\t\t\t\t<span class=\"priority\">{sort_priority}</span>\n\t\t\t{/if}\n\t\t</button>\n\t\t<button role=\"menuitem\" on:click={on_clear_sort}>\n\t\t\t<CellMenuIcons icon=\"clear-sort\" />\n\t\t\t{i18n(\"dataframe.clear_sort\")}\n\t\t</button>\n\t{/if}\n\n\t{#if !is_header && can_add_rows}\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_add_row_above()}\n\t\t\taria-label=\"Add row above\"\n\t\t>\n\t\t\t<CellMenuIcons icon=\"add-row-above\" />\n\t\t\t{i18n(\"dataframe.add_row_above\")}\n\t\t</button>\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_add_row_below()}\n\t\t\taria-label=\"Add row below\"\n\t\t>\n\t\t\t<CellMenuIcons icon=\"add-row-below\" />\n\t\t\t{i18n(\"dataframe.add_row_below\")}\n\t\t</button>\n\t\t{#if can_delete_rows}\n\t\t\t<button\n\t\t\t\trole=\"menuitem\"\n\t\t\t\ton:click={on_delete_row}\n\t\t\t\tclass=\"delete\"\n\t\t\t\taria-label=\"Delete row\"\n\t\t\t>\n\t\t\t\t<CellMenuIcons icon=\"delete-row\" />\n\t\t\t\t{i18n(\"dataframe.delete_row\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n\t{#if can_add_columns}\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_add_column_left()}\n\t\t\taria-label=\"Add column to the left\"\n\t\t>\n\t\t\t<CellMenuIcons icon=\"add-column-left\" />\n\t\t\t{i18n(\"dataframe.add_column_left\")}\n\t\t</button>\n\t\t<button\n\t\t\trole=\"menuitem\"\n\t\t\ton:click={() => on_add_column_right()}\n\t\t\taria-label=\"Add column to the right\"\n\t\t>\n\t\t\t<CellMenuIcons icon=\"add-column-right\" />\n\t\t\t{i18n(\"dataframe.add_column_right\")}\n\t\t</button>\n\t\t{#if can_delete_cols}\n\t\t\t<button\n\t\t\t\trole=\"menuitem\"\n\t\t\t\ton:click={on_delete_col}\n\t\t\t\tclass=\"delete\"\n\t\t\t\taria-label=\"Delete column\"\n\t\t\t>\n\t\t\t\t<CellMenuIcons icon=\"delete-column\" />\n\t\t\t\t{i18n(\"dataframe.delete_column\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n</div>\n\n<style>\n\t.cell-menu {\n\t\tposition: fixed;\n\t\tz-index: 9;\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-1);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tmin-width: 150px;\n\t\tz-index: var(--layer-1);\n\t}\n\n\t.cell-menu button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\tpadding: var(--size-1) var(--size-2);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\ttransition:\n\t\t\tbackground-color 0.2s,\n\t\t\tcolor 0.2s;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\tposition: relative;\n\t}\n\n\t.cell-menu button.active {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button:hover {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button :global(svg) {\n\t\tfill: currentColor;\n\t\ttransition: fill 0.2s;\n\t}\n\n\t.priority {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-left: auto;\n\t\tfont-size: var(--size-2);\n\t\tbackground-color: var(--button-secondary-background-fill);\n\t\tcolor: var(--body-text-color);\n\t\tborder-radius: var(--radius-sm);\n\t\twidth: var(--size-2-5);\n\t\theight: var(--size-2-5);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Maximize, Minimize, Copy, Check } from \"@gradio/icons\";\n\timport { onDestroy } from \"svelte\";\n\timport { createEventDispatcher } from \"svelte\";\n\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let show_search: \"none\" | \"search\" | \"filter\" = \"none\";\n\texport let is_fullscreen = false;\n\texport let on_copy: () => Promise<void>;\n\texport let on_commit_filter: () => void;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tsearch: string | null;\n\t}>();\n\n\tlet copied = false;\n\tlet timer: ReturnType<typeof setTimeout>;\n\texport let current_search_query: string | null = null;\n\tlet input_value = \"\";\n\n\tfunction handle_search_input(e: Event): void {\n\t\tconst target = e.target as HTMLInputElement;\n\t\tinput_value = target.value;\n\t\tconst new_query = input_value || null;\n\t\tif (current_search_query !== new_query) {\n\t\t\tcurrent_search_query = new_query;\n\t\t\tdispatch(\"search\", current_search_query);\n\t\t}\n\t}\n\n\tfunction copy_feedback(): void {\n\t\tcopied = true;\n\t\tif (timer) clearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcopied = false;\n\t\t}, 2000);\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tawait on_copy();\n\t\tcopy_feedback();\n\t}\n\n\tonDestroy(() => {\n\t\tif (timer) clearTimeout(timer);\n\t});\n</script>\n\n<div class=\"toolbar\" role=\"toolbar\" aria-label=\"Table actions\">\n\t<div class=\"toolbar-buttons\">\n\t\t{#if show_search !== \"none\"}\n\t\t\t<div class=\"search-container\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={current_search_query || \"\"}\n\t\t\t\t\ton:input={handle_search_input}\n\t\t\t\t\tplaceholder={show_search === \"filter\" ? \"Filter...\" : \"Search...\"}\n\t\t\t\t\tclass=\"search-input\"\n\t\t\t\t\tclass:filter-mode={show_search === \"filter\"}\n\t\t\t\t\ttitle={`Enter text to ${show_search} the table`}\n\t\t\t\t/>\n\t\t\t\t{#if current_search_query && show_search === \"filter\"}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"toolbar-button check-button\"\n\t\t\t\t\t\ton:click={on_commit_filter}\n\t\t\t\t\t\taria-label=\"Apply filter and update dataframe values\"\n\t\t\t\t\t\ttitle=\"Apply filter and update dataframe values\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Check />\n\t\t\t\t\t</button>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/if}\n\t\t{#if show_copy_button}\n\t\t\t<button\n\t\t\t\tclass=\"toolbar-button\"\n\t\t\t\ton:click={handle_copy}\n\t\t\t\taria-label={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t\t\ttitle={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t\t>\n\t\t\t\t{#if copied}\n\t\t\t\t\t<Check />\n\t\t\t\t{:else}\n\t\t\t\t\t<Copy />\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t{/if}\n\t\t{#if show_fullscreen_button}\n\t\t\t<button\n\t\t\t\tclass=\"toolbar-button\"\n\t\t\t\ton:click\n\t\t\t\taria-label={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t\t\ttitle={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t\t>\n\t\t\t\t{#if is_fullscreen}\n\t\t\t\t\t<Minimize />\n\t\t\t\t{:else}\n\t\t\t\t\t<Maximize />\n\t\t\t\t{/if}\n\t\t\t</button>\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.toolbar {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\tflex: 0 0 auto;\n\t}\n\n\t.toolbar-buttons {\n\t\tdisplay: flex;\n\t\tgap: var(--size-1);\n\t\tflex-wrap: nowrap;\n\t}\n\n\t.toolbar-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: var(--size-6);\n\t\theight: var(--size-6);\n\t\tpadding: var(--size-1);\n\t\tborder: none;\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: transparent;\n\t\tcolor: var(--body-text-color-subdued);\n\t\tcursor: pointer;\n\t\ttransition: all 0.2s;\n\t}\n\n\t.toolbar-button:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.toolbar-button :global(svg) {\n\t\twidth: var(--size-4);\n\t\theight: var(--size-4);\n\t}\n\n\t.search-container {\n\t\tposition: relative;\n\t}\n\n\t.search-input {\n\t\twidth: var(--size-full);\n\t\theight: var(--size-6);\n\t\tpadding: var(--size-2);\n\t\tpadding-right: var(--size-8);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\tfont-size: var(--text-sm);\n\t\tcolor: var(--body-text-color);\n\t\tbackground: var(--background-fill-secondary);\n\t\ttransition: all 0.2s ease;\n\t}\n\n\t.search-input:hover {\n\t\tborder-color: var(--border-color-secondary);\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\t.search-input:focus {\n\t\toutline: none;\n\t\tborder-color: var(--color-accent);\n\t\tbackground: var(--background-fill-primary);\n\t\tbox-shadow: 0 0 0 1px var(--color-accent);\n\t}\n\n\t.check-button {\n\t\tposition: absolute;\n\t\tright: var(--size-1);\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\tbackground: var(--color-accent);\n\t\tcolor: white;\n\t\tborder: none;\n\t\twidth: var(--size-4);\n\t\theight: var(--size-4);\n\t\tborder-radius: var(--radius-sm);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tpadding: var(--size-1);\n\t}\n\n\t.check-button :global(svg) {\n\t\twidth: var(--size-3);\n\t\theight: var(--size-3);\n\t}\n\n\t.check-button:hover {\n\t\tbackground: var(--color-accent-soft);\n\t}\n</style>\n","import type { Headers, HeadersWithIDs } from \"../utils\";\n\nexport function make_headers(\n\t_head: Headers,\n\tcol_count: [number, \"fixed\" | \"dynamic\"],\n\tels: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t>,\n\tmake_id: () => string\n): HeadersWithIDs {\n\tlet _h = _head || [];\n\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t.fill(\"\")\n\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t_h = _h.concat(fill);\n\t}\n\n\tif (!_h || _h.length === 0) {\n\t\treturn Array(col_count[0])\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t});\n\t}\n\n\treturn _h.map((h, i) => {\n\t\tconst _id = make_id();\n\t\tels[_id] = { cell: null, input: null };\n\t\treturn { id: _id, value: h ?? \"\" };\n\t});\n}\n\nexport function process_data(\n\tvalues: (string | number)[][],\n\tels: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t>,\n\tdata_binding: Record<string, any>,\n\tmake_id: () => string,\n\tdisplay_value: string[][] | null = null\n): { id: string; value: string | number; display_value?: string }[][] {\n\tif (!values || values.length === 0) {\n\t\treturn [];\n\t}\n\n\tconst result = values.map((row, i) => {\n\t\treturn row.map((value, j) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata_binding[_id] = value;\n\n\t\t\tlet display = display_value?.[i]?.[j];\n\n\t\t\tif (display === undefined) {\n\t\t\t\tdisplay = String(value);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: _id,\n\t\t\t\tvalue,\n\t\t\t\tdisplay_value: display\n\t\t\t};\n\t\t});\n\t});\n\n\treturn result;\n}\n","import { dequal } from \"dequal/lite\";\nimport { handle_delete_key } from \"../selection_utils\";\nimport type { KeyboardContext } from \"../context/keyboard_context\";\nimport { tick } from \"svelte\";\nimport { copy_table_data } from \"./table_utils\";\n\nfunction handle_header_navigation(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext\n): boolean {\n\tif (ctx.selected_header === false || ctx.header_edit !== false) return false;\n\tswitch (event.key) {\n\t\tcase \"ArrowDown\":\n\t\t\tctx.df_actions.set_selected_header(false);\n\t\t\tctx.df_actions.set_selected([0, ctx.selected_header]);\n\t\t\tctx.df_actions.set_selected_cells([[0, ctx.selected_header]]);\n\t\t\treturn true;\n\t\tcase \"ArrowLeft\":\n\t\t\tctx.df_actions.set_selected_header(\n\t\t\t\tctx.selected_header > 0 ? ctx.selected_header - 1 : ctx.selected_header\n\t\t\t);\n\t\t\treturn true;\n\t\tcase \"ArrowRight\":\n\t\t\tctx.df_actions.set_selected_header(\n\t\t\t\tctx.selected_header < ctx.headers.length - 1\n\t\t\t\t\t? ctx.selected_header + 1\n\t\t\t\t\t: ctx.selected_header\n\t\t\t);\n\t\t\treturn true;\n\t\tcase \"Escape\":\n\t\t\tevent.preventDefault();\n\t\t\tctx.df_actions.set_selected_header(false);\n\t\t\treturn true;\n\t\tcase \"Enter\":\n\t\t\tevent.preventDefault();\n\t\t\tif (ctx.editable) {\n\t\t\t\tctx.df_actions.set_header_edit(ctx.selected_header);\n\t\t\t}\n\t\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction handle_delete_operation(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext\n): boolean {\n\tif (!ctx.editable) return false;\n\tif (event.key !== \"Delete\" && event.key !== \"Backspace\") return false;\n\n\tif (ctx.editing) {\n\t\tconst [row, col] = ctx.editing;\n\t\tconst input_el = ctx.els[ctx.data[row][col].id].input;\n\t\tif (input_el && input_el.selectionStart !== input_el.selectionEnd) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tevent.key === \"Delete\" &&\n\t\t\tinput_el?.selectionStart !== input_el?.value.length\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (event.key === \"Backspace\" && input_el?.selectionStart !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tevent.preventDefault();\n\tif (ctx.selected_cells.length > 0) {\n\t\tconst new_data = handle_delete_key(ctx.data, ctx.selected_cells);\n\t\tctx.dispatch(\"change\", {\n\t\t\tdata: new_data.map((row) => row.map((cell) => cell.value)),\n\t\t\theaders: ctx.headers.map((h) => h.value),\n\t\t\tmetadata: null\n\t\t});\n\t\tctx.dispatch(\"input\");\n\t}\n\treturn true;\n}\n\nfunction handle_arrow_keys(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext,\n\ti: number,\n\tj: number\n): boolean {\n\tif (ctx.editing) return false;\n\tevent.preventDefault();\n\n\tconst next_coords = ctx.move_cursor(event, [i, j], ctx.data);\n\tif (next_coords) {\n\t\tif (event.shiftKey) {\n\t\t\tctx.df_actions.set_selected_cells(\n\t\t\t\tctx.get_range_selection(\n\t\t\t\t\tctx.selected_cells.length > 0 ? ctx.selected_cells[0] : [i, j],\n\t\t\t\t\tnext_coords\n\t\t\t\t)\n\t\t\t);\n\t\t\tctx.df_actions.set_editing(false);\n\t\t} else {\n\t\t\tctx.df_actions.set_selected_cells([next_coords]);\n\t\t\tctx.df_actions.set_editing(false);\n\t\t}\n\t\tctx.df_actions.set_selected(next_coords);\n\t} else if (next_coords === false && event.key === \"ArrowUp\" && i === 0) {\n\t\tctx.df_actions.set_selected_header(j);\n\t\tctx.df_actions.set_selected(false);\n\t\tctx.df_actions.set_selected_cells([]);\n\t\tctx.df_actions.set_editing(false);\n\t}\n\treturn true;\n}\n\nasync function handle_enter_key(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext,\n\ti: number,\n\tj: number\n): Promise<boolean> {\n\tevent.preventDefault();\n\tif (!ctx.editable) return false;\n\n\tif (event.shiftKey) {\n\t\tawait ctx.add_row(i);\n\t\tawait tick();\n\t\tctx.df_actions.set_selected([i + 1, j]);\n\t} else {\n\t\tif (dequal(ctx.editing, [i, j])) {\n\t\t\tconst cell_id = ctx.data[i][j].id;\n\t\t\tconst input_el = ctx.els[cell_id].input;\n\t\t\tif (input_el) {\n\t\t\t\tconst old_value = ctx.data[i][j].value;\n\t\t\t\tctx.data[i][j].value = input_el.value;\n\t\t\t\tif (old_value !== input_el.value) {\n\t\t\t\t\tctx.dispatch(\"input\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.df_actions.set_editing(false);\n\t\t\tawait tick();\n\t\t\tctx.df_actions.set_selected([i, j]);\n\t\t} else {\n\t\t\tctx.df_actions.set_editing([i, j]);\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction handle_tab_key(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext,\n\ti: number,\n\tj: number\n): boolean {\n\tevent.preventDefault();\n\tctx.df_actions.set_editing(false);\n\tconst next_cell = ctx.get_next_cell_coordinates(\n\t\t[i, j],\n\t\tctx.data,\n\t\tevent.shiftKey\n\t);\n\tif (next_cell) {\n\t\tctx.df_actions.set_selected_cells([next_cell]);\n\t\tctx.df_actions.set_selected(next_cell);\n\t\tif (ctx.editable) {\n\t\t\tctx.df_actions.set_editing(next_cell);\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction handle_default_key(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext,\n\ti: number,\n\tj: number\n): boolean {\n\tif (!ctx.editable) return false;\n\tif (\n\t\t(!ctx.editing || (ctx.editing && dequal(ctx.editing, [i, j]))) &&\n\t\tevent.key.length === 1\n\t) {\n\t\tctx.df_actions.set_editing([i, j]);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nasync function handle_cell_navigation(\n\tevent: KeyboardEvent,\n\tctx: KeyboardContext\n): Promise<boolean> {\n\tif (!ctx.selected) return false;\n\tif (event.key === \"c\" && (event.metaKey || event.ctrlKey)) {\n\t\tevent.preventDefault();\n\t\tif (ctx.selected_cells.length > 0) {\n\t\t\tawait copy_table_data(ctx.data, ctx.selected_cells);\n\t\t}\n\t\tctx.set_copy_flash(true);\n\n\t\treturn true;\n\t}\n\n\tconst [i, j] = ctx.selected;\n\n\tswitch (event.key) {\n\t\tcase \"ArrowRight\":\n\t\tcase \"ArrowLeft\":\n\t\tcase \"ArrowDown\":\n\t\tcase \"ArrowUp\":\n\t\t\treturn handle_arrow_keys(event, ctx, i, j);\n\t\tcase \"Escape\":\n\t\t\tif (!ctx.editable) return false;\n\t\t\tevent.preventDefault();\n\t\t\tctx.df_actions.set_editing(false);\n\t\t\ttick().then(() => {\n\t\t\t\tif (ctx.parent_element) {\n\t\t\t\t\tctx.parent_element.focus();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\tcase \"Enter\":\n\t\t\treturn await handle_enter_key(event, ctx, i, j);\n\t\tcase \"Tab\":\n\t\t\treturn handle_tab_key(event, ctx, i, j);\n\t\tdefault:\n\t\t\treturn handle_default_key(event, ctx, i, j);\n\t}\n}\n\nexport async function handle_keydown(\n\tevent: KeyboardEvent,\n\tcontext: KeyboardContext\n): Promise<void> {\n\tif (handle_header_navigation(event, context)) return;\n\tif (handle_delete_operation(event, context)) return;\n\tawait handle_cell_navigation(event, context);\n}\n","import type { CellCoordinate } from \"../types\";\nimport { get_range_selection } from \"../selection_utils\";\n\nexport type DragState = {\n\tis_dragging: boolean;\n\tdrag_start: CellCoordinate | null;\n\tmouse_down_pos: { x: number; y: number } | null;\n};\n\nexport type DragHandlers = {\n\thandle_mouse_down: (event: MouseEvent, row: number, col: number) => void;\n\thandle_mouse_move: (event: MouseEvent) => void;\n\thandle_mouse_up: (event: MouseEvent) => void;\n};\n\nexport function create_drag_handlers(\n\tstate: DragState,\n\tset_is_dragging: (value: boolean) => void,\n\tset_selected_cells: (cells: CellCoordinate[]) => void,\n\tset_selected: (cell: CellCoordinate | false) => void,\n\thandle_cell_click: (event: MouseEvent, row: number, col: number) => void,\n\tshow_row_numbers: boolean,\n\tparent_element?: HTMLElement\n): DragHandlers {\n\tconst start_drag = (event: MouseEvent, row: number, col: number): void => {\n\t\tif (\n\t\t\tevent.target instanceof HTMLAnchorElement ||\n\t\t\t(show_row_numbers && col === -1)\n\t\t)\n\t\t\treturn;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tstate.mouse_down_pos = { x: event.clientX, y: event.clientY };\n\t\tstate.drag_start = [row, col];\n\n\t\tif (!event.shiftKey && !event.metaKey && !event.ctrlKey) {\n\t\t\tset_selected_cells([[row, col]]);\n\t\t\tset_selected([row, col]);\n\t\t}\n\t};\n\n\tconst update_selection = (event: MouseEvent): void => {\n\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\tif (!cell) return;\n\n\t\tconst row = parseInt(cell.getAttribute(\"data-row\") || \"0\");\n\t\tconst col = parseInt(cell.getAttribute(\"data-col\") || \"0\");\n\n\t\tif (isNaN(row) || isNaN(col)) return;\n\n\t\tconst selection_range = get_range_selection(state.drag_start!, [row, col]);\n\t\tset_selected_cells(selection_range);\n\t\tset_selected([row, col]);\n\t};\n\n\tconst end_drag = (event: MouseEvent): void => {\n\t\tif (!state.is_dragging && state.drag_start) {\n\t\t\thandle_cell_click(event, state.drag_start[0], state.drag_start[1]);\n\t\t} else if (state.is_dragging && parent_element) {\n\t\t\tparent_element.focus();\n\t\t}\n\n\t\tstate.is_dragging = false;\n\t\tset_is_dragging(false);\n\t\tstate.drag_start = null;\n\t\tstate.mouse_down_pos = null;\n\t};\n\n\treturn {\n\t\thandle_mouse_down: start_drag,\n\n\t\thandle_mouse_move(event: MouseEvent): void {\n\t\t\tif (!state.drag_start || !state.mouse_down_pos) return;\n\n\t\t\tconst dx = Math.abs(event.clientX - state.mouse_down_pos.x);\n\t\t\tconst dy = Math.abs(event.clientY - state.mouse_down_pos.y);\n\n\t\t\tif (!state.is_dragging && (dx > 3 || dy > 3)) {\n\t\t\t\tstate.is_dragging = true;\n\t\t\t\tset_is_dragging(true);\n\t\t\t}\n\n\t\t\tif (state.is_dragging) {\n\t\t\t\tupdate_selection(event);\n\t\t\t}\n\t\t},\n\n\t\thandle_mouse_up: end_drag\n\t};\n}\n","<script lang=\"ts\" context=\"module\">\n\timport {\n\t\ttype SortDirection,\n\t\tcreate_dataframe_context\n\t} from \"./context/table_context\";\n\timport { create_keyboard_context } from \"./context/keyboard_context\";\n\timport { create_selection_context } from \"./context/selection_context\";\n</script>\n\n<script lang=\"ts\">\n\timport { afterUpdate, createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dequal } from \"dequal/lite\";\n\timport { Upload } from \"@gradio/upload\";\n\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport RowNumber from \"./RowNumber.svelte\";\n\timport TableHeader from \"./TableHeader.svelte\";\n\timport TableCell from \"./TableCell.svelte\";\n\timport EmptyRowButton from \"./EmptyRowButton.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport { type Client } from \"@gradio/client\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type { Headers, DataframeValue, Datatype } from \"./utils\";\n\timport CellMenu from \"./CellMenu.svelte\";\n\timport Toolbar from \"./Toolbar.svelte\";\n\timport type { CellCoordinate } from \"./types\";\n\timport {\n\t\tis_cell_selected,\n\t\tshould_show_cell_menu,\n\t\tget_next_cell_coordinates,\n\t\tget_range_selection,\n\t\tmove_cursor,\n\t\tget_current_indices,\n\t\thandle_click_outside as handle_click_outside_util,\n\t\tcalculate_selection_positions\n\t} from \"./selection_utils\";\n\timport {\n\t\tcopy_table_data,\n\t\tget_max,\n\t\thandle_file_upload\n\t} from \"./utils/table_utils\";\n\timport { make_headers, process_data } from \"./utils/data_processing\";\n\timport { handle_keydown } from \"./utils/keyboard_utils\";\n\timport {\n\t\tcreate_drag_handlers,\n\t\ttype DragState,\n\t\ttype DragHandlers\n\t} from \"./utils/drag_utils\";\n\timport { sort_data_and_preserve_selection } from \"./utils/sort_utils\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let headers: Headers = [];\n\texport let values: (string | number)[][] = [];\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let components: Record<string, any> = {};\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let max_height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let show_row_numbers = false;\n\texport let upload: Client[\"upload\"];\n\texport let stream_handler: Client[\"stream\"];\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let value_is_output = false;\n\texport let max_chars: number | undefined = undefined;\n\texport let show_search: \"none\" | \"search\" | \"filter\" = \"none\";\n\texport let pinned_columns = 0;\n\texport let static_columns: (string | number)[] = [];\n\n\t$: actual_pinned_columns =\n\t\tpinned_columns && data?.[0]?.length\n\t\t\t? Math.min(pinned_columns, data[0].length)\n\t\t\t: 0;\n\n\tconst { state: df_state, actions: df_actions } = create_dataframe_context({\n\t\tshow_fullscreen_button,\n\t\tshow_copy_button,\n\t\tshow_search,\n\t\tshow_row_numbers,\n\t\teditable,\n\t\tpinned_columns,\n\t\tshow_label,\n\t\tline_breaks,\n\t\twrap,\n\t\tmax_height,\n\t\tcolumn_widths,\n\t\tmax_chars\n\t});\n\n\t$: selected_cells = $df_state.ui_state.selected_cells; // $: {\n\tlet previous_selected_cells: [number, number][] = [];\n\t$: {\n\t\tif (copy_flash && !dequal(selected_cells, previous_selected_cells)) {\n\t\t\tkeyboard_ctx?.set_copy_flash(false);\n\t\t}\n\t\tprevious_selected_cells = selected_cells;\n\t}\n\t$: selected = $df_state.ui_state.selected;\n\n\texport let display_value: string[][] | null = null;\n\texport let styling: string[][] | null = null;\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DataframeValue;\n\t\tinput: undefined;\n\t\tselect: SelectData;\n\t\tsearch: string | null;\n\t}>();\n\n\t$: editing = $df_state.ui_state.editing;\n\tlet clear_on_focus = false;\n\t$: header_edit = $df_state.ui_state.header_edit;\n\t$: selected_header = $df_state.ui_state.selected_header;\n\t$: active_cell_menu = $df_state.ui_state.active_cell_menu;\n\t$: active_header_menu = $df_state.ui_state.active_header_menu;\n\tlet is_fullscreen = false;\n\tlet dragging = false;\n\tlet copy_flash = false;\n\n\tlet color_accent_copied: string;\n\tonMount(() => {\n\t\tconst color = getComputedStyle(document.documentElement)\n\t\t\t.getPropertyValue(\"--color-accent\")\n\t\t\t.trim();\n\t\tcolor_accent_copied = color + \"40\"; // 80 is 50% opacity in hex\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t\"--color-accent-copied\",\n\t\t\tcolor_accent_copied\n\t\t);\n\t});\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\n\tlet _headers = make_headers(headers, col_count, els, make_id);\n\tlet old_headers: string[] = headers;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\t_headers = make_headers(headers, col_count, els, make_id);\n\t\t\told_headers = JSON.parse(JSON.stringify(headers));\n\t\t}\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\tlet search_results: {\n\t\tid: string;\n\t\tvalue: string | number;\n\t\tdisplay_value?: string;\n\t\tstyling?: string;\n\t}[][] = [[]];\n\n\t$: if (!dequal(values, old_val)) {\n\t\tif (parent) {\n\t\t\t// only clear column widths when the data structure changes\n\t\t\tconst is_reset =\n\t\t\t\tvalues.length === 0 || (values.length === 1 && values[0].length === 0);\n\t\t\tconst is_different_structure =\n\t\t\t\told_val !== undefined &&\n\t\t\t\t(values.length !== old_val.length ||\n\t\t\t\t\t(values[0] && old_val[0] && values[0].length !== old_val[0].length));\n\n\t\t\tif (is_reset || is_different_structure) {\n\t\t\t\tfor (let i = 0; i < 50; i++) {\n\t\t\t\t\tparent.style.removeProperty(`--cell-width-${i}`);\n\t\t\t\t}\n\t\t\t\tlast_width_data_length = 0;\n\t\t\t\tlast_width_column_count = 0;\n\t\t\t}\n\t\t}\n\n\t\t// only reset sort state when values are changed\n\t\tconst is_reset =\n\t\t\tvalues.length === 0 || (values.length === 1 && values[0].length === 0);\n\t\tconst is_different_structure =\n\t\t\told_val !== undefined &&\n\t\t\t(values.length !== old_val.length ||\n\t\t\t\t(values[0] && old_val[0] && values[0].length !== old_val[0].length));\n\n\t\tdata = process_data(\n\t\t\tvalues as (string | number)[][],\n\t\t\tels,\n\t\t\tdata_binding,\n\t\t\tmake_id,\n\t\t\tdisplay_value\n\t\t);\n\t\told_val = JSON.parse(JSON.stringify(values)) as (string | number)[][];\n\n\t\tif (is_reset || is_different_structure) {\n\t\t\tdf_actions.reset_sort_state();\n\t\t} else if ($df_state.sort_state.sort_columns.length > 0) {\n\t\t\tsort_data(data, display_value, styling);\n\t\t}\n\n\t\tif ($df_state.current_search_query) {\n\t\t\tdf_actions.handle_search(null);\n\t\t}\n\n\t\tif (parent && cells.length > 0) {\n\t\t\tset_cell_widths();\n\t\t}\n\t}\n\n\t$: if ($df_state.current_search_query !== undefined) {\n\t\tconst cell_map = new Map();\n\n\t\tdata.forEach((row, row_idx) => {\n\t\t\trow.forEach((cell, col_idx) => {\n\t\t\t\tcell_map.set(cell.id, {\n\t\t\t\t\tvalue: cell.value,\n\t\t\t\t\tstyling: styling?.[row_idx]?.[col_idx] || \"\"\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tconst filtered = df_actions.filter_data(data);\n\n\t\tsearch_results = filtered.map((row) =>\n\t\t\trow.map((cell) => {\n\t\t\t\tconst original = cell_map.get(cell.id);\n\t\t\t\treturn {\n\t\t\t\t\t...cell,\n\t\t\t\t\tdisplay_value: original?.display_value || String(cell.value),\n\t\t\t\t\tstyling: original?.styling || \"\"\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\tlet previous_headers = _headers.map((h) => h.value);\n\tlet previous_data = data.map((row) => row.map((cell) => String(cell.value)));\n\n\t$: {\n\t\tif (data || _headers) {\n\t\t\tdf_actions.trigger_change(\n\t\t\t\tdata,\n\t\t\t\t_headers,\n\t\t\t\tprevious_data,\n\t\t\t\tprevious_headers,\n\t\t\t\tvalue_is_output,\n\t\t\t\tdispatch\n\t\t\t);\n\t\t\tprevious_data = data.map((row) => row.map((cell) => String(cell.value)));\n\t\t\tprevious_headers = _headers.map((h) => h.value);\n\t\t}\n\t}\n\n\tfunction handle_sort(col: number, direction: SortDirection): void {\n\t\tdf_actions.handle_sort(col, direction);\n\t\tsort_data(data, display_value, styling);\n\t}\n\n\tfunction clear_sort(): void {\n\t\tdf_actions.reset_sort_state();\n\t\tsort_data(data, display_value, styling);\n\t}\n\n\t$: {\n\t\tdf_actions.sort_data(data, display_value, styling);\n\t\tdf_actions.update_row_order(data);\n\t}\n\n\t$: {\n\t\tif ($df_state.sort_state.sort_columns) {\n\t\t\tif ($df_state.sort_state.sort_columns.length > 0) {\n\t\t\t\tsort_data(data, display_value, styling);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || header_edit === i) return;\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tdf_actions.set_header_edit(i);\n\t}\n\n\tfunction handle_header_click(event: MouseEvent, col: number): void {\n\t\tif (event.target instanceof HTMLAnchorElement) {\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tif (!editable) return;\n\t\tclear_on_focus = false;\n\t\tdf_actions.set_editing(false);\n\t\tdf_actions.handle_header_click(col, editable);\n\t\tparent.focus();\n\t}\n\n\tfunction end_header_edit(event: CustomEvent<KeyboardEvent>): void {\n\t\tif (!editable) return;\n\t\tdf_actions.end_header_edit(event.detail.key);\n\t\tparent.focus();\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\n\t\tconst new_row = Array(data[0]?.length || headers.length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t});\n\n\t\tif (data.length === 0) {\n\t\t\tdata = [new_row];\n\t\t} else if (index !== undefined && index >= 0 && index <= data.length) {\n\t\t\tdata.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tdata.push(new_row);\n\t\t}\n\n\t\tdata = data;\n\t\tselected = [index !== undefined ? index : data.length - 1, 0];\n\t}\n\n\tasync function add_col(index?: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\n\t\tconst result = df_actions.add_col(data, headers, make_id, index);\n\n\t\tresult.data.forEach((row) => {\n\t\t\trow.forEach((cell) => {\n\t\t\t\tif (!els[cell.id]) {\n\t\t\t\t\tels[cell.id] = { cell: null, input: null };\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tdata = result.data;\n\t\theaders = result.headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(index !== undefined ? index : data[0].length - 1, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tif (handle_click_outside_util(event, parent)) {\n\t\t\tdf_actions.clear_ui_state();\n\t\t\theader_edit = false;\n\t\t\tselected_header = false;\n\t\t}\n\t}\n\n\t$: max = get_max(data);\n\n\t// Modify how we trigger cell width calculations\n\t// Only recalculate when cells actually change, not during sort\n\t$: cells[0] && cells[0]?.clientWidth && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\tlet last_width_data_length = 0;\n\tlet last_width_column_count = 0;\n\n\tfunction set_cell_widths(): void {\n\t\tconst column_count = data[0]?.length || 0;\n\t\tif (\n\t\t\tlast_width_data_length === data.length &&\n\t\t\tlast_width_column_count === column_count &&\n\t\t\t$df_state.sort_state.sort_columns.length > 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tlast_width_data_length = data.length;\n\t\tlast_width_column_count = column_count;\n\n\t\tconst widths = cells.map((el) => el?.clientWidth || 0);\n\t\tif (widths.length === 0) return;\n\n\t\tif (show_row_numbers) {\n\t\t\tparent.style.setProperty(`--cell-width-row-number`, `${widths[0]}px`);\n\t\t}\n\n\t\tfor (let i = 0; i < 50; i++) {\n\t\t\tif (!column_widths[i]) {\n\t\t\t\tparent.style.removeProperty(`--cell-width-${i}`);\n\t\t\t} else if (column_widths[i].endsWith(\"%\")) {\n\t\t\t\tconst percentage = parseFloat(column_widths[i]);\n\t\t\t\tconst pixel_width = Math.floor((percentage / 100) * parent.clientWidth);\n\t\t\t\tparent.style.setProperty(`--cell-width-${i}`, `${pixel_width}px`);\n\t\t\t} else {\n\t\t\t\tparent.style.setProperty(`--cell-width-${i}`, column_widths[i]);\n\t\t\t}\n\t\t}\n\n\t\twidths.forEach((width, i) => {\n\t\t\tif (!column_widths[i]) {\n\t\t\t\tconst calculated_width = `${Math.max(width, 45)}px`;\n\t\t\t\tparent.style.setProperty(`--cell-width-${i}`, calculated_width);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction get_cell_width(index: number): string {\n\t\treturn `var(--cell-width-${index})`;\n\t}\n\n\tlet table_height: number =\n\t\tvalues.slice(0, (max_height / values.length) * 37).length * 37 + 37;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null\n\t): void {\n\t\tconst result = sort_data_and_preserve_selection(\n\t\t\t_data,\n\t\t\t_display_value,\n\t\t\t_styling,\n\t\t\t$df_state.sort_state.sort_columns,\n\t\t\tselected,\n\t\t\tget_current_indices\n\t\t);\n\n\t\tdata = result.data;\n\t\tselected = result.selected;\n\t}\n\n\t$: sort_data(data, display_value, styling);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\t\tdocument.addEventListener(\"click\", handle_click_outside);\n\t\twindow.addEventListener(\"resize\", handle_resize);\n\t\tdocument.addEventListener(\"fullscreenchange\", handle_fullscreen_change);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t\tdocument.removeEventListener(\"click\", handle_click_outside);\n\t\t\twindow.removeEventListener(\"resize\", handle_resize);\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"fullscreenchange\",\n\t\t\t\thandle_fullscreen_change\n\t\t\t);\n\t\t};\n\t});\n\n\t$: keyboard_ctx = create_keyboard_context({\n\t\tselected_header,\n\t\theader_edit,\n\t\tediting,\n\t\tselected,\n\t\tselected_cells,\n\t\teditable,\n\t\tdata,\n\t\theaders: _headers,\n\t\tels,\n\t\tdf_actions,\n\t\tdispatch,\n\t\tadd_row,\n\t\tget_next_cell_coordinates,\n\t\tget_range_selection,\n\t\tmove_cursor,\n\t\tcopy_flash,\n\t\tparent_element: parent,\n\t\tset_copy_flash: (value: boolean) => {\n\t\t\tcopy_flash = value;\n\t\t\tif (value) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcopy_flash = false;\n\t\t\t\t}, 800);\n\t\t\t}\n\t\t}\n\t});\n\n\t$: selection_ctx = create_selection_context({\n\t\tdf_actions,\n\t\tdispatch,\n\t\tdata,\n\t\tels,\n\t\teditable,\n\t\tshow_row_numbers,\n\t\tget_data_at,\n\t\tclear_on_focus,\n\t\tselected_cells,\n\t\tparent_element: parent\n\t});\n\n\tfunction handle_cell_click(\n\t\tevent: MouseEvent,\n\t\trow: number,\n\t\tcol: number\n\t): void {\n\t\tselection_ctx.actions.handle_cell_click(event, row, col);\n\t}\n\n\tfunction toggle_cell_menu(event: MouseEvent, row: number, col: number): void {\n\t\tselection_ctx.actions.toggle_cell_menu(event, row, col);\n\t}\n\n\tfunction handle_select_column(col: number): void {\n\t\tselection_ctx.actions.handle_select_column(col);\n\t}\n\n\tfunction handle_select_row(row: number): void {\n\t\tselection_ctx.actions.handle_select_row(row);\n\t}\n\n\tfunction toggle_fullscreen(): void {\n\t\tif (!document.fullscreenElement) {\n\t\t\tparent.requestFullscreen();\n\t\t\tis_fullscreen = true;\n\t\t} else {\n\t\t\tdocument.exitFullscreen();\n\t\t\tis_fullscreen = false;\n\t\t}\n\t}\n\n\tfunction handle_fullscreen_change(): void {\n\t\tis_fullscreen = !!document.fullscreenElement;\n\t}\n\n\tfunction toggle_header_menu(event: MouseEvent, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (active_header_menu && active_header_menu.col === col) {\n\t\t\tdf_actions.set_active_header_menu(null);\n\t\t} else {\n\t\t\tconst header = (event.target as HTMLElement).closest(\"th\");\n\t\t\tif (header) {\n\t\t\t\tconst rect = header.getBoundingClientRect();\n\t\t\t\tdf_actions.set_active_header_menu({\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\n\tfunction delete_col_at(index: number): void {\n\t\tif (col_count[1] !== \"dynamic\") return;\n\t\tif (data[0].length <= 1) return;\n\n\t\tconst result = df_actions.delete_col_at(data, headers, index);\n\t\tdata = result.data;\n\t\theaders = result.headers;\n\t\t_headers = make_headers(headers, col_count, els, make_id);\n\t\tdf_actions.set_active_cell_menu(null);\n\t\tdf_actions.set_active_header_menu(null);\n\t\tdf_actions.set_selected(false);\n\t\tdf_actions.set_selected_cells([]);\n\t\tdf_actions.set_editing(false);\n\t}\n\n\tfunction delete_row_at(index: number): void {\n\t\tdata = df_actions.delete_row_at(data, index);\n\t\tdf_actions.set_active_cell_menu(null);\n\t\tdf_actions.set_active_header_menu(null);\n\t}\n\n\tlet coords: CellCoordinate;\n\t$: if (selected !== false) coords = selected;\n\n\t$: if (selected !== false) {\n\t\tconst positions = calculate_selection_positions(\n\t\t\tselected,\n\t\t\tdata,\n\t\t\tels,\n\t\t\tparent,\n\t\t\ttable\n\t\t);\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t\"--selected-col-pos\",\n\t\t\tpositions.col_pos\n\t\t);\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t\"--selected-row-pos\",\n\t\t\tpositions.row_pos || \"0px\"\n\t\t);\n\t}\n\n\tfunction commit_filter(): void {\n\t\tif ($df_state.current_search_query && show_search === \"filter\") {\n\t\t\tconst filtered_data: (string | number)[][] = [];\n\t\t\tconst filtered_display_values: string[][] = [];\n\t\t\tconst filtered_styling: string[][] = [];\n\n\t\t\tsearch_results.forEach((row) => {\n\t\t\t\tconst data_row: (string | number)[] = [];\n\t\t\t\tconst display_row: string[] = [];\n\t\t\t\tconst styling_row: string[] = [];\n\n\t\t\t\trow.forEach((cell) => {\n\t\t\t\t\tdata_row.push(cell.value);\n\t\t\t\t\tdisplay_row.push(cell.display_value || String(cell.value));\n\t\t\t\t\tstyling_row.push(cell.styling || \"\");\n\t\t\t\t});\n\n\t\t\t\tfiltered_data.push(data_row);\n\t\t\t\tfiltered_display_values.push(display_row);\n\t\t\t\tfiltered_styling.push(styling_row);\n\t\t\t});\n\n\t\t\tconst change_payload = {\n\t\t\t\tdata: filtered_data,\n\t\t\t\theaders: _headers.map((h) => h.value),\n\t\t\t\tmetadata: {\n\t\t\t\t\tdisplay_value: filtered_display_values,\n\t\t\t\t\tstyling: filtered_styling\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdispatch(\"change\", change_payload);\n\n\t\t\tif (!value_is_output) {\n\t\t\t\tdispatch(\"input\");\n\t\t\t}\n\n\t\t\tdf_actions.handle_search(null);\n\t\t}\n\t}\n\n\tlet viewport: HTMLTableElement;\n\tlet show_scroll_button = false;\n\n\tfunction scroll_to_top(): void {\n\t\tviewport.scrollTo({\n\t\t\ttop: 0\n\t\t});\n\t}\n\n\tfunction handle_resize(): void {\n\t\tdf_actions.set_active_cell_menu(null);\n\t\tdf_actions.set_active_header_menu(null);\n\t\tselected_cells = [];\n\t\tselected = false;\n\t\tediting = false;\n\t\tset_cell_widths();\n\t}\n\n\tfunction add_row_at(index: number, position: \"above\" | \"below\"): void {\n\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\tadd_row(row_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction add_col_at(index: number, position: \"left\" | \"right\"): void {\n\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\tadd_col(col_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\texport function reset_sort_state(): void {\n\t\tdf_actions.reset_sort_state();\n\t}\n\n\tlet is_dragging = false;\n\tlet drag_start: [number, number] | null = null;\n\tlet mouse_down_pos: { x: number; y: number } | null = null;\n\n\tconst drag_state: DragState = {\n\t\tis_dragging,\n\t\tdrag_start,\n\t\tmouse_down_pos\n\t};\n\n\t$: {\n\t\tis_dragging = drag_state.is_dragging;\n\t\tdrag_start = drag_state.drag_start;\n\t\tmouse_down_pos = drag_state.mouse_down_pos;\n\t}\n\n\tlet drag_handlers: DragHandlers;\n\n\tfunction init_drag_handlers(): void {\n\t\tdrag_handlers = create_drag_handlers(\n\t\t\tdrag_state,\n\t\t\t(value) => (is_dragging = value),\n\t\t\t(cells) => df_actions.set_selected_cells(cells),\n\t\t\t(cell) => df_actions.set_selected(cell),\n\t\t\t(event, row, col) =>\n\t\t\t\tselection_ctx.actions.handle_cell_click(event, row, col),\n\t\t\tshow_row_numbers,\n\t\t\tparent\n\t\t);\n\t}\n\n\t$: if (parent) init_drag_handlers();\n\n\t$: handle_mouse_down = drag_handlers?.handle_mouse_down || (() => {});\n\t$: handle_mouse_move = drag_handlers?.handle_mouse_move || (() => {});\n\t$: handle_mouse_up = drag_handlers?.handle_mouse_up || (() => {});\n</script>\n\n<svelte:window on:resize={() => set_cell_widths()} />\n\n<div class=\"table-container\">\n\t{#if (label && label.length !== 0 && show_label) || show_fullscreen_button || show_copy_button || show_search !== \"none\"}\n\t\t<div class=\"header-row\">\n\t\t\t{#if label && label.length !== 0 && show_label}\n\t\t\t\t<div class=\"label\">\n\t\t\t\t\t<p>{label}</p>\n\t\t\t\t</div>\n\t\t\t{/if}\n\t\t\t<Toolbar\n\t\t\t\t{show_fullscreen_button}\n\t\t\t\t{is_fullscreen}\n\t\t\t\ton:click={toggle_fullscreen}\n\t\t\t\ton_copy={async () => await copy_table_data(data, null)}\n\t\t\t\t{show_copy_button}\n\t\t\t\t{show_search}\n\t\t\t\ton:search={(e) => df_actions.handle_search(e.detail)}\n\t\t\t\ton_commit_filter={commit_filter}\n\t\t\t\tcurrent_search_query={$df_state.current_search_query}\n\t\t\t/>\n\t\t</div>\n\t{/if}\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging={is_dragging}\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px;\"\n\t\tclass:menu-open={active_cell_menu || active_header_menu}\n\t\ton:keydown={(e) => handle_keydown(e, keyboard_ctx)}\n\t\ton:mousemove={handle_mouse_move}\n\t\ton:mouseup={handle_mouse_up}\n\t\ton:mouseleave={handle_mouse_up}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table bind:this={table}>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<RowNumber is_header={true} />\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<TableHeader\n\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t{actual_pinned_columns}\n\t\t\t\t\t\t\t{header_edit}\n\t\t\t\t\t\t\t{selected_header}\n\t\t\t\t\t\t\tget_sort_status={df_actions.get_sort_status}\n\t\t\t\t\t\t\t{headers}\n\t\t\t\t\t\t\t{get_cell_width}\n\t\t\t\t\t\t\t{handle_header_click}\n\t\t\t\t\t\t\t{toggle_header_menu}\n\t\t\t\t\t\t\t{end_header_edit}\n\t\t\t\t\t\t\tsort_columns={$df_state.sort_state.sort_columns}\n\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t{max_chars}\n\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\tis_static={static_columns.includes(i)}\n\t\t\t\t\t\t\t{i18n}\n\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t{col_count}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<RowNumber index={0} />\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\t{i18n}\n\t\t\t\t\t\t\t\t\tshow_selection_buttons={selected_cells.length === 1 &&\n\t\t\t\t\t\t\t\t\t\tselected_cells[0][0] === 0 &&\n\t\t\t\t\t\t\t\t\t\tselected_cells[0][1] === j}\n\t\t\t\t\t\t\t\t\tcoords={[0, j]}\n\t\t\t\t\t\t\t\t\ton_select_column={handle_select_column}\n\t\t\t\t\t\t\t\t\ton_select_row={handle_select_row}\n\t\t\t\t\t\t\t\t\t{is_dragging}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={({ detail }) =>\n\t\t\t\thandle_file_upload(\n\t\t\t\t\tdetail.data,\n\t\t\t\t\t(head) => {\n\t\t\t\t\t\t_headers = make_headers(\n\t\t\t\t\t\t\thead.map((h) => h ?? \"\"),\n\t\t\t\t\t\t\tcol_count,\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\tmake_id\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn _headers;\n\t\t\t\t\t},\n\t\t\t\t\t(vals) => {\n\t\t\t\t\t\tvalues = vals;\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\tbind:dragging\n\t\t\taria_label={i18n(\"dataframe.drop_to_upload\")}\n\t\t>\n\t\t\t<div class=\"table-wrap\">\n\t\t\t\t<VirtualTable\n\t\t\t\t\tbind:items={search_results}\n\t\t\t\t\t{max_height}\n\t\t\t\t\tbind:actual_height={table_height}\n\t\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\t\tselected={selected_index}\n\t\t\t\t\tdisable_scroll={active_cell_menu !== null ||\n\t\t\t\t\t\tactive_header_menu !== null}\n\t\t\t\t\tbind:viewport\n\t\t\t\t\tbind:show_scroll_button\n\t\t\t\t\ton:scroll_top={(_) => {}}\n\t\t\t\t>\n\t\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t\t{/if}\n\t\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t\t<RowNumber is_header={true} />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t\t<TableHeader\n\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t{i}\n\t\t\t\t\t\t\t\t{actual_pinned_columns}\n\t\t\t\t\t\t\t\t{header_edit}\n\t\t\t\t\t\t\t\t{selected_header}\n\t\t\t\t\t\t\t\tget_sort_status={df_actions.get_sort_status}\n\t\t\t\t\t\t\t\t{headers}\n\t\t\t\t\t\t\t\t{get_cell_width}\n\t\t\t\t\t\t\t\t{handle_header_click}\n\t\t\t\t\t\t\t\t{toggle_header_menu}\n\t\t\t\t\t\t\t\t{end_header_edit}\n\t\t\t\t\t\t\t\tsort_columns={$df_state.sort_state.sort_columns}\n\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t{max_chars}\n\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\tis_static={static_columns.includes(i)}\n\t\t\t\t\t\t\t\t{i18n}\n\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t{col_count}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row-odd={index % 2 === 0}>\n\t\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t\t<RowNumber {index} />\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\tbind:value={search_results[index][j].value}\n\t\t\t\t\t\t\t\t{index}\n\t\t\t\t\t\t\t\t{j}\n\t\t\t\t\t\t\t\t{actual_pinned_columns}\n\t\t\t\t\t\t\t\t{get_cell_width}\n\t\t\t\t\t\t\t\thandle_cell_click={(e, r, c) => handle_mouse_down(e, r, c)}\n\t\t\t\t\t\t\t\t{toggle_cell_menu}\n\t\t\t\t\t\t\t\t{is_cell_selected}\n\t\t\t\t\t\t\t\t{should_show_cell_menu}\n\t\t\t\t\t\t\t\t{selected_cells}\n\t\t\t\t\t\t\t\t{copy_flash}\n\t\t\t\t\t\t\t\t{active_cell_menu}\n\t\t\t\t\t\t\t\tstyling={search_results[index][j].styling}\n\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t{editing}\n\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t{max_chars}\n\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\tis_static={static_columns.includes(j)}\n\t\t\t\t\t\t\t\t{i18n}\n\t\t\t\t\t\t\t\t{components}\n\t\t\t\t\t\t\t\t{handle_select_column}\n\t\t\t\t\t\t\t\t{handle_select_row}\n\t\t\t\t\t\t\t\tbind:el={els[id]}\n\t\t\t\t\t\t\t\t{is_dragging}\n\t\t\t\t\t\t\t\t{wrap}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</tr>\n\t\t\t\t</VirtualTable>\n\t\t\t</div>\n\t\t</Upload>\n\t\t{#if show_scroll_button}\n\t\t\t<button class=\"scroll-top-button\" on:click={scroll_to_top}>\n\t\t\t\t&uarr;\n\t\t\t</button>\n\t\t{/if}\n\t</div>\n</div>\n{#if data.length === 0 && editable && row_count[1] === \"dynamic\"}\n\t<EmptyRowButton on_click={() => add_row()} />\n{/if}\n\n{#if active_cell_menu || active_header_menu}\n\t<CellMenu\n\t\tx={active_cell_menu?.x ?? active_header_menu?.x ?? 0}\n\t\ty={active_cell_menu?.y ?? active_header_menu?.y ?? 0}\n\t\trow={active_header_menu ? -1 : active_cell_menu?.row ?? 0}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() =>\n\t\t\tadd_col_at(\n\t\t\t\tactive_cell_menu?.col ?? active_header_menu?.col ?? -1,\n\t\t\t\t\"left\"\n\t\t\t)}\n\t\ton_add_column_right={() =>\n\t\t\tadd_col_at(\n\t\t\t\tactive_cell_menu?.col ?? active_header_menu?.col ?? -1,\n\t\t\t\t\"right\"\n\t\t\t)}\n\t\ton_delete_row={() => delete_row_at(active_cell_menu?.row ?? -1)}\n\t\ton_delete_col={() =>\n\t\t\tdelete_col_at(active_cell_menu?.col ?? active_header_menu?.col ?? -1)}\n\t\t{editable}\n\t\tcan_delete_rows={!active_header_menu && data.length > 1 && editable}\n\t\tcan_delete_cols={data.length > 0 && data[0]?.length > 1 && editable}\n\t\t{i18n}\n\t\ton_sort={active_header_menu\n\t\t\t? (direction) => {\n\t\t\t\t\tif (active_header_menu) {\n\t\t\t\t\t\thandle_sort(active_header_menu.col, direction);\n\t\t\t\t\t\tdf_actions.set_active_header_menu(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t: undefined}\n\t\ton_clear_sort={active_header_menu\n\t\t\t? () => {\n\t\t\t\t\tclear_sort();\n\t\t\t\t\tdf_actions.set_active_header_menu(null);\n\t\t\t\t}\n\t\t\t: undefined}\n\t\tsort_direction={active_header_menu\n\t\t\t? $df_state.sort_state.sort_columns.find(\n\t\t\t\t\t(item) => item.col === (active_header_menu?.col ?? -1)\n\t\t\t\t)?.direction ?? null\n\t\t\t: null}\n\t\tsort_priority={active_header_menu\n\t\t\t? $df_state.sort_state.sort_columns.findIndex(\n\t\t\t\t\t(item) => item.col === (active_header_menu?.col ?? -1)\n\t\t\t\t) + 1 || null\n\t\t\t: null}\n\t/>\n{/if}\n\n<style>\n\t.table-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-2);\n\t\tposition: relative;\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t}\n\n\t.table-wrap.menu-open {\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t}\n\n\t.table-wrap.dragging {\n\t\tcursor: crosshair !important;\n\t\tuser-select: none;\n\t}\n\n\t.table-wrap.dragging * {\n\t\tcursor: crosshair !important;\n\t\tuser-select: none;\n\t}\n\n\t.table-wrap > :global(button) {\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\tz-index: -1;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\tborder-collapse: separate;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tz-index: 5;\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n\n\tthead :global(th.pinned-column) {\n\t\tposition: sticky;\n\t\tz-index: 6;\n\t\tbackground: var(--table-even-background-fill) !important;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\t.row-odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.header-row {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\tmin-height: var(--size-6);\n\t\tflex-wrap: nowrap;\n\t\twidth: 100%;\n\t}\n\n\t.header-row .label {\n\t\tflex: 1 1 auto;\n\t\tmargin-right: auto;\n\t}\n\n\t.header-row .label p {\n\t\tmargin: 0;\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t\tline-height: var(--line-sm);\n\t\tposition: relative;\n\t\tz-index: 4;\n\t}\n\n\t.scroll-top-button {\n\t\tposition: absolute;\n\t\tright: var(--size-4);\n\t\tbottom: var(--size-4);\n\t\twidth: var(--size-8);\n\t\theight: var(--size-8);\n\t\tborder-radius: var(--table-radius);\n\t\tbackground: var(--color-accent);\n\t\tcolor: white;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tfont-size: var(--text-lg);\n\t\tz-index: 9;\n\t\topacity: 0.5;\n\t}\n\n\t.scroll-top-button:hover {\n\t\topacity: 1;\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Datatype, DataframeValue } from \"./shared/utils\";\n\timport Image from \"@gradio/image\";\n\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: DataframeValue = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t\tsearch: string | null;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let max_height: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\texport let show_fullscreen_button = false;\n\texport let max_chars: number | undefined = undefined;\n\texport let show_copy_button = false;\n\texport let show_row_numbers = false;\n\texport let show_search: \"none\" | \"search\" | \"filter\" = \"none\";\n\texport let pinned_columns = 0;\n\texport let static_columns: (string | number)[] = [];\n\n\t$: _headers = [...(value.headers || headers)];\n\t$: display_value = value?.metadata?.display_value\n\t\t? [...value?.metadata?.display_value]\n\t\t: null;\n\t$: styling =\n\t\t!interactive && value?.metadata?.styling\n\t\t\t? [...value?.metadata?.styling]\n\t\t\t: null;\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\toverflow_behavior=\"visible\"\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{show_label}\n\t\t{row_count}\n\t\t{col_count}\n\t\tvalues={value.data}\n\t\t{display_value}\n\t\t{styling}\n\t\theaders={_headers}\n\t\ton:change={(e) => {\n\t\t\tvalue.data = e.detail.data;\n\t\t\tvalue.headers = e.detail.headers;\n\t\t\tgradio.dispatch(\"change\");\n\t\t}}\n\t\ton:input={(e) => gradio.dispatch(\"input\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{max_height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t\tupload={(...args) => gradio.client.upload(...args)}\n\t\tstream_handler={(...args) => gradio.client.stream(...args)}\n\t\tbind:value_is_output\n\t\t{show_fullscreen_button}\n\t\t{max_chars}\n\t\t{show_copy_button}\n\t\t{show_row_numbers}\n\t\t{show_search}\n\t\t{pinned_columns}\n\t\tcomponents={{ image: Image }}\n\t\t{static_columns}\n\t/>\n</Block>\n"],"names":["is_cell_in_selection","coords","selected_cells","row","col","r","c","is_cell_selected","cell","up","down","left","right","get_range_selection","start","end","start_row","start_col","end_row","end_col","min_row","max_row","min_col","max_col","cells","i","j","handle_selection","current","event","is_cell_match","index","_","handle_delete_key","data","new_data","should_show_cell_menu","editable","get_next_cell_coordinates","shift_key","direction","next_row","prev_row","move_cursor","current_coords","key","dir","get_current_indices","id","acc","arr","_acc","_data","k","handle_click_outside","parent","trigger","calculate_selection_positions","selected","els","table","cell_id","cell_el","cell_rect","table_rect","col_pos","row_pos","getContext","tick","SELECTION_KEY","create_selection_context","context","instance_id","actions","new_selected_cells","input_el","d","current_menu","rect","current_button","new_button","selection_context","setContext","KEYBOARD_KEY","create_keyboard_context","sort_data","sort_columns","row_indices","row_a_idx","row_b_idx","row_a","row_b","sort_by","val_a","val_b","comparison","sort_data_and_preserve_selection","display_value","styling","sort_table_data","new_selected","get_max","max","indices","new_display","new_styling","copy_table_data","csv","value","rows","a","b","cols","text","err","guess_delimiter","possibleDelimiters","weedOut","delimiter","cache","checkLength","line","length","data_uri_to_blob","data_uri","byte_str","mime_str","ab","ia","handle_file_upload","update_headers","update_values","blob","reader","e","head","rest","dsvFormat","DATAFRAME_KEY","create_actions","state","add_row","make_id","new_row","add_col","headers","new_headers","reset_sort_state","search_query","s","existing_index","item","name","sort_item","get","current_state","current_sort_state","sort_index","comp","cell_value","position","row_index","col_index","menu","editing","header_index","previous_data","previous_headers","value_is_output","dispatch","current_headers","h","current_data","dequal","button","create_dataframe_context","config","writable","ctx","attr","button_class_value","insert","target","anchor","append","span","svg","path","dirty","$$props","on_click","click_handler","$$invalidate","is_first_position","input","markdowncode_changes","switch_value","func","switch_instance_changes","create_if_block_4","if_block2","create_if_block","toggle_class","truncate_text","max_length","is_image","str","edit","header","datatype","latex_delimiters","clear_on_focus","line_breaks","is_static","root","max_chars","components","i18n","is_dragging","wrap_text","show_selection_buttons","on_select_column","on_select_row","createEventDispatcher","is_expanded","el","use_focus","node","_value","handle_blur","currentTarget","handle_keydown","handle_click","$$value","should_truncate","display_content","display_text","t_value","td","set_data","t","th","is_header","is_function","touch","mouseEvent","div","path0","path1","size","create_if_block_3","if_block0","create_if_block_2","create_if_block_1","th_aria_sort_value","set_style","div1","div0","editablecell_changes","actual_pinned_columns","header_edit","selected_header","get_sort_status","get_cell_width","handle_header_click","toggle_header_menu","end_header_edit","col_count","get_header_position","idx","click_handler_1","can_add_columns","sort_priority","current_direction","editablecell_props","td_tabindex_value","td_data_testid_value","handle_cell_click","toggle_cell_menu","copy_flash","active_cell_menu","handle_select_column","handle_select_row","wrap","get_cell_position","$$self","mousedown_handler","contextmenu_handler","cell_classes","is_in_selection","has_no_top","has_no_bottom","has_no_left","has_no_right","onMount","get_key","height","svelte_virtual_table_viewport","thead","tbody","tfoot","get_computed_px_amount","elem","property","compStyle","items","max_height","actual_height","table_scrollbar_width","disable_scroll","show_scroll_button","viewport","average_height","bottom","contents","head_height","foot_height","height_map","mounted","top","viewport_height","visible","viewport_box","is_browser","raf","cb","content_height","refresh_height_map","_items","scrollTop","_h","row_height","remaining","scrollbar_height","filtered_height_map","v","scroll_and_render","n","is_in_view","scroll_to_index","viewport_top","handle_scroll","scroll_top","is_start_overflow","sortedItems","row_top_border","actual_border_collapsed_width","new_start","y","row_heights","remaining_height","opts","align_end","_itemHeight","distance","_opts","ResizeObserverSingleton","path2","path3","path4","create_if_block_5","create_if_block_6","create_if_block_7","create_if_block_8","icon","t1_value","t5_value","t9_value","if_block1","button0","button1","button2","t1","t5","t9","t4_value","t4","x","on_add_row_above","on_add_row_below","on_add_column_left","on_add_column_right","row_count","on_delete_row","on_delete_col","can_delete_rows","can_delete_cols","on_sort","on_clear_sort","sort_direction","menu_element","position_menu","viewport_width","menu_rect","new_x","new_y","can_add_rows","input_value_value","input_placeholder_value","show_fullscreen_button","show_copy_button","show_search","is_fullscreen","on_copy","on_commit_filter","copied","timer","current_search_query","input_value","handle_search_input","new_query","copy_feedback","handle_copy","onDestroy","make_headers","_head","fill","_id","process_data","values","data_binding","display","handle_header_navigation","handle_delete_operation","handle_arrow_keys","next_coords","handle_enter_key","old_value","handle_tab_key","next_cell","handle_default_key","handle_cell_navigation","create_drag_handlers","set_is_dragging","set_selected_cells","set_selected","show_row_numbers","parent_element","start_drag","update_selection","selection_range","dx","dy","if_block","create_if_block_10","toolbar_changes","p","caption","tr","tablecell_props","tablecell_changes","virtualtable_changes","cellmenu_changes","create_if_block_9","if_block6","table_1","tr0","tr1","upload_1_changes","label","show_label","column_widths","upload","stream_handler","pinned_columns","static_columns","df_state","df_actions","previous_selected_cells","dragging","color_accent_copied","get_data_at","_headers","old_headers","old_val","search_results","handle_sort","clear_sort","edit_header","_select","result","new_w","handle_click_outside_util","last_width_data_length","last_width_column_count","set_cell_widths","column_count","$df_state","widths","percentage","pixel_width","width","calculated_width","table_height","scrollbar_width","_display_value","_styling","is_visible","observer","entries","entry","handle_resize","handle_fullscreen_change","selection_ctx","toggle_fullscreen","active_header_menu","afterUpdate","delete_col_at","delete_row_at","commit_filter","filtered_data","filtered_display_values","filtered_styling","data_row","display_row","styling_row","change_payload","scroll_to_top","add_row_at","add_col_at","drag_start","mouse_down_pos","drag_state","drag_handlers","init_drag_handlers","search_handler","handle_mouse_down","load_handler","detail","vals","keydown_handler","keyboard_ctx","func_3","func_4","func_7","is_reset","is_different_structure","cell_map","row_idx","col_idx","filtered","original","selected_index","positions","handle_mouse_move","handle_mouse_up","Image","table_changes","elem_id","elem_classes","scale","min_width","gradio","loading_status","interactive","clear_status_handler","args","func_1","input_handler"],"mappings":"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"}